(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-14"],{"./resources/js/components/backend/products/AddProduct.vue":
/*!*****************************************************************************!*\
  !*** ./resources/js/components/backend/products/AddProduct.vue + 6 modules ***!
  \*****************************************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VBtn/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VForm/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VGrid/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VRadioGroup/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VTextField/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify/lib/components/VTextarea/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./resources/js/event/eventbus.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/vuetify-loader/lib/runtime/installComponents.js (<- Module is not an ECMAScript module) */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vuetify-loader/lib/loader.js??ref--5-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/backend/products/AddProduct.vue?vue&type=template&id=2fcd84c3&scoped=true&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    { attrs: { id: "add-item-page" } },\n    [\n      _c("Navbar", {\n        attrs: {\n          tabs: [{ Products: "Products", "Add Product": "Add Product" }],\n          heading: "Products",\n          "email-page": true\n        }\n      }),\n      _vm._v(" "),\n      _c(\n        "v-form",\n        {\n          ref: "form",\n          staticClass: "add-product",\n          class: [_vm.loading ? "loading-form" : ""],\n          attrs: { method: "POST", enctype: "multipart/form-data" },\n          model: {\n            value: _vm.form.valid,\n            callback: function($$v) {\n              _vm.$set(_vm.form, "valid", $$v)\n            },\n            expression: "form.valid"\n          }\n        },\n        [\n          _c("input", {\n            attrs: { type: "hidden", name: "_token" },\n            domProps: { value: _vm.csrf }\n          }),\n          _vm._v(" "),\n          _vm.loading ? _c("div", { staticClass: "lds-dual-ring" }) : _vm._e(),\n          _vm._v(" "),\n          _c("div", [\n            _c("h4", { staticClass: "form-title" }, [\n              _vm._v(_vm._s(_vm.updatePage ? "Edit Product" : "Add Product"))\n            ]),\n            _vm._v(" "),\n            _c("ul", { staticClass: "list-group-inline" }, [\n              _c("li", { staticClass: "nav-item", attrs: { "data-id": "3" } }, [\n                _c(\n                  "a",\n                  {\n                    staticClass: "nav-link",\n                    class: { active: _vm.isActive(3) },\n                    attrs: { href: "#rus" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.setActive($event, 3)\n                      }\n                    }\n                  },\n                  [_vm._v("RUS")]\n                )\n              ]),\n              _vm._v(" "),\n              _c("li", { staticClass: "nav-item", attrs: { "data-id": "1" } }, [\n                _c(\n                  "a",\n                  {\n                    staticClass: "nav-link",\n                    class: { active: _vm.isActive(1) },\n                    attrs: { href: "#eng" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.setActive($event, 1)\n                      }\n                    }\n                  },\n                  [_vm._v("ENG")]\n                )\n              ]),\n              _vm._v(" "),\n              _c("li", { staticClass: "nav-item", attrs: { "data-id": "2" } }, [\n                _c(\n                  "a",\n                  {\n                    staticClass: "nav-link",\n                    class: { active: _vm.isActive(2) },\n                    attrs: { href: "#ro" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.setActive($event, 2)\n                      }\n                    }\n                  },\n                  [_vm._v("RO")]\n                )\n              ])\n            ])\n          ]),\n          _vm._v(" "),\n          _c(\n            "div",\n            {\n              staticClass: "tab-content py-3",\n              attrs: { id: "addProductTabs" }\n            },\n            [\n              _c(\n                "div",\n                {\n                  class: ["tab-pane fade", { "active show": _vm.isActive(1) }],\n                  attrs: { id: "eng" }\n                },\n                [\n                  _c(\n                    "v-container",\n                    [\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Stock")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-radio-group",\n                                {\n                                  attrs: { row: "", mandatory: "" },\n                                  model: {\n                                    value: _vm.form[1].available,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[1], "available", $$v)\n                                    },\n                                    expression: "form[1].available"\n                                  }\n                                },\n                                [\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 1,\n                                      label: "In stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 1)\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(" "),\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 0,\n                                      label: "Out of stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 0)\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Description")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: {\n                                  placeholder: "Product name",\n                                  required: "",\n                                  rules: _vm.form[1].nameRules\n                                },\n                                model: {\n                                  value: _vm.form[1].name,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[1], "name", $$v)\n                                  },\n                                  expression: "form[1].name"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Set number" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "sku",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[1].sku,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[1], "sku", $$v)\n                                  },\n                                  expression: "form[1].sku"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "div",\n                                { staticClass: "dropdown-categories" },\n                                [\n                                  _c(\n                                    "button",\n                                    {\n                                      staticClass: "v-select-dropdown",\n                                      attrs: { type: "submit" },\n                                      on: {\n                                        click: function($event) {\n                                          $event.preventDefault()\n                                          return _vm.activateDropdown($event)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    " +\n                                          _vm._s(_vm.isActiveCategory()) +\n                                          "\\n                                    "\n                                      ),\n                                      _vm.dropdown\n                                        ? _c("i", { staticClass: "arrow up" })\n                                        : _c("i", { staticClass: "arrow down" })\n                                    ]\n                                  ),\n                                  _vm._v(" "),\n                                  _vm.dropdown\n                                    ? _c(\n                                        "ul",\n                                        {\n                                          staticClass:\n                                            "position-absolute bg-white category-dropdown list-unstyled"\n                                        },\n                                        _vm._l(\n                                          _vm.groupCategories(_vm.categories),\n                                          function(category) {\n                                            return _c("li", [\n                                              _c(\n                                                "p",\n                                                {\n                                                  staticClass: "parent",\n                                                  attrs: {\n                                                    "data-id": category.id\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.selectCategory(\n                                                        $event\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    "\\n                                            " +\n                                                      _vm._s(category.name)\n                                                  )\n                                                ]\n                                              ),\n                                              _vm._v(" "),\n                                              category.child\n                                                ? _c(\n                                                    "ul",\n                                                    _vm._l(\n                                                      category.child,\n                                                      function(subcategory) {\n                                                        return _c(\n                                                          "li",\n                                                          {\n                                                            attrs: {\n                                                              "data-id":\n                                                                subcategory.id\n                                                            },\n                                                            on: {\n                                                              click: function(\n                                                                $event\n                                                              ) {\n                                                                return _vm.selectCategory(\n                                                                  $event\n                                                                )\n                                                              }\n                                                            }\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              "\\n                                                - " +\n                                                                _vm._s(\n                                                                  subcategory.name\n                                                                ) +\n                                                                "\\n                                            "\n                                                            )\n                                                          ]\n                                                        )\n                                                      }\n                                                    ),\n                                                    0\n                                                  )\n                                                : _vm._e()\n                                            ])\n                                          }\n                                        ),\n                                        0\n                                      )\n                                    : _vm._e()\n                                ]\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-text-field",\n                                {\n                                  attrs: { placeholder: "Price" },\n                                  on: {\n                                    keyup: function($event) {\n                                      return _vm.updateValues(\n                                        "price",\n                                        $event.target.value\n                                      )\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.form[1].price,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[1], "price", $$v)\n                                    },\n                                    expression: "form[1].price"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    "p",\n                                    {\n                                      staticClass: "m-auto",\n                                      attrs: { slot: "append" },\n                                      slot: "append"\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    EUR\\n                                "\n                                      )\n                                    ]\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Brand" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "brand",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[1].brand,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[1], "brand", $$v)\n                                  },\n                                  expression: "form[1].brand"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "label",\n                                {\n                                  staticClass: "add-to-item",\n                                  attrs: { for: "logo-upload" }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                                " +\n                                      _vm._s(_vm.logo ? _vm.logo : "Image") +\n                                      "\\n                                "\n                                  ),\n                                  _c("img", {\n                                    directives: [\n                                      {\n                                        name: "lazy",\n                                        rawName: "v-lazy",\n                                        value: "/assets/icons/img.jpg",\n                                        expression: "\'/assets/icons/img.jpg\'"\n                                      }\n                                    ],\n                                    staticClass: "file-input-icon ml-2"\n                                  })\n                                ]\n                              ),\n                              _vm._v(" "),\n                              _c("input", {\n                                attrs: { type: "file", id: "logo-upload" },\n                                on: { change: _vm.logoChosen }\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-textarea", {\n                                attrs: {\n                                  placeholder: "Body",\n                                  required: "",\n                                  name: "text"\n                                },\n                                model: {\n                                  value: _vm.form[1].description,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[1], "description", $$v)\n                                  },\n                                  expression: "form[1].description"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("v-col", { attrs: { cols: "12" } }, [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "img-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.image ? _vm.image : "Add image"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              attrs: { type: "file", id: "img-upload" },\n                              on: { change: _vm.imageChosen }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "div",\n                        { staticClass: "document" },\n                        [\n                          _c("v-row", [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "document-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.document\n                                        ? _vm.document\n                                        : "Add document"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: { id: "document-upload", type: "file" },\n                              on: {\n                                change: function($event) {\n                                  return _vm.documentChosen($event)\n                                }\n                              }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Features")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[1].features, function(f, index) {\n                        return _c(\n                          "v-row",\n                          {\n                            key: "feature-" + index,\n                            staticClass: "features-block"\n                          },\n                          [\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6 pr-2" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Name" },\n                                  model: {\n                                    value: f.feature_name,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_name", $$v)\n                                    },\n                                    expression: "f.feature_name"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Feature" },\n                                  model: {\n                                    value: f.feature_value,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_value", $$v)\n                                    },\n                                    expression: "f.feature_value"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "span",\n                              {\n                                staticClass: "feature-delete",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.deleteFeature(index)\n                                  }\n                                }\n                              },\n                              [\n                                _c("img", {\n                                  attrs: {\n                                    src: "/assets/icons/delete.png",\n                                    title: "Delete feature"\n                                  }\n                                })\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "add-to-item",\n                              on: { click: _vm.pushFeature }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Add specification\\n                            "\n                              ),\n                              _c("img", {\n                                directives: [\n                                  {\n                                    name: "lazy",\n                                    rawName: "v-lazy",\n                                    value: "/assets/icons/add.jpg",\n                                    expression: "\'/assets/icons/add.jpg\'"\n                                  }\n                                ],\n                                staticClass: "ml-2 fil-input-icon"\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Benefits")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[1].advantages, function(f, index) {\n                        return _c(\n                          "v-col",\n                          { key: "advantages-" + index, attrs: { cols: "12" } },\n                          [\n                            _c(\n                              "v-row",\n                              [\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6 pr-2" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Name" },\n                                      model: {\n                                        value: f.name,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "name", $$v)\n                                        },\n                                        expression: "f.name"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(" "),\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Benefits" },\n                                      model: {\n                                        value: f.value,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "value", $$v)\n                                        },\n                                        expression: "f.value"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item w-100",\n                                attrs: { for: "file-upload-" + index }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                            " +\n                                    _vm._s(f.icon ? f.icon : "Add icon") +\n                                    "\\n                            "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "ml-2 file-input-icon"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: {\n                                id: "file-upload-" + index,\n                                type: "file"\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.iconChosen($event, index)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        { staticClass: "d-flex justify-content-end" },\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "discard-form",\n                              attrs: { width: "auto" },\n                              on: { click: _vm.discard }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Discard\\n                        "\n                              )\n                            ]\n                          ),\n                          _vm._v(" "),\n                          _vm.updatePage\n                            ? _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.update($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            UPDATE\\n                        "\n                                  )\n                                ]\n                              )\n                            : _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.send($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            SEND\\n                        "\n                                  )\n                                ]\n                              )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("input", {\n                        attrs: { type: "hidden" },\n                        domProps: { value: 1 }\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              ),\n              _vm._v(" "),\n              _c(\n                "div",\n                {\n                  staticClass: "tab-pane fade",\n                  class: { "active show": _vm.isActive(3) },\n                  attrs: { id: "rus" }\n                },\n                [\n                  _c(\n                    "v-container",\n                    [\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Stock")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-radio-group",\n                                {\n                                  attrs: { row: "" },\n                                  model: {\n                                    value: _vm.form[3].available,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[3], "available", $$v)\n                                    },\n                                    expression: "form[3].available"\n                                  }\n                                },\n                                [\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 1,\n                                      label: "In stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 1)\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(" "),\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 0,\n                                      label: "Out of stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 0)\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Description")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: {\n                                  placeholder: "Product name",\n                                  required: "",\n                                  rules: _vm.form[3].nameRules\n                                },\n                                model: {\n                                  value: _vm.form[3].name,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[3], "name", $$v)\n                                  },\n                                  expression: "form[3].name"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Set number" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "sku",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[3].sku,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[3], "sku", $$v)\n                                  },\n                                  expression: "form[3].sku"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "div",\n                                { staticClass: "dropdown-categories" },\n                                [\n                                  _c(\n                                    "button",\n                                    {\n                                      staticClass: "v-select-dropdown",\n                                      attrs: { type: "submit" },\n                                      on: {\n                                        click: function($event) {\n                                          $event.preventDefault()\n                                          return _vm.activateDropdown($event)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    " +\n                                          _vm._s(_vm.isActiveCategory()) +\n                                          "\\n                                    "\n                                      ),\n                                      _vm.dropdown\n                                        ? _c("i", { staticClass: "arrow up" })\n                                        : _c("i", { staticClass: "arrow down" })\n                                    ]\n                                  ),\n                                  _vm._v(" "),\n                                  _vm.dropdown\n                                    ? _c(\n                                        "ul",\n                                        {\n                                          staticClass:\n                                            "position-absolute bg-white category-dropdown list-unstyled"\n                                        },\n                                        _vm._l(\n                                          _vm.groupCategories(_vm.categories),\n                                          function(category) {\n                                            return _c("li", [\n                                              _c(\n                                                "p",\n                                                {\n                                                  staticClass: "parent",\n                                                  attrs: {\n                                                    "data-id": category.id\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.selectCategory(\n                                                        $event\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    "\\n                                            " +\n                                                      _vm._s(category.name)\n                                                  )\n                                                ]\n                                              ),\n                                              _vm._v(" "),\n                                              category.child\n                                                ? _c(\n                                                    "ul",\n                                                    _vm._l(\n                                                      category.child,\n                                                      function(subcategory) {\n                                                        return _c(\n                                                          "li",\n                                                          {\n                                                            attrs: {\n                                                              "data-id":\n                                                                subcategory.id\n                                                            },\n                                                            on: {\n                                                              click: function(\n                                                                $event\n                                                              ) {\n                                                                return _vm.selectCategory(\n                                                                  $event\n                                                                )\n                                                              }\n                                                            }\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              "\\n                                                - " +\n                                                                _vm._s(\n                                                                  subcategory.name\n                                                                ) +\n                                                                "\\n                                            "\n                                                            )\n                                                          ]\n                                                        )\n                                                      }\n                                                    ),\n                                                    0\n                                                  )\n                                                : _vm._e()\n                                            ])\n                                          }\n                                        ),\n                                        0\n                                      )\n                                    : _vm._e()\n                                ]\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-text-field",\n                                {\n                                  attrs: { placeholder: "Price" },\n                                  on: {\n                                    keyup: function($event) {\n                                      return _vm.updateValues(\n                                        "price",\n                                        $event.target.value\n                                      )\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.form[3].price,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[3], "price", $$v)\n                                    },\n                                    expression: "form[3].price"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    "p",\n                                    {\n                                      staticClass: "m-auto",\n                                      attrs: { slot: "append" },\n                                      slot: "append"\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    EUR\\n                                "\n                                      )\n                                    ]\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Brand" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "brand",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[3].brand,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[3], "brand", $$v)\n                                  },\n                                  expression: "form[3].brand"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "label",\n                                {\n                                  staticClass: "add-to-item",\n                                  attrs: { for: "logo-upload" }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                                " +\n                                      _vm._s(_vm.logo ? _vm.logo : "Image") +\n                                      "\\n                                "\n                                  ),\n                                  _c("img", {\n                                    directives: [\n                                      {\n                                        name: "lazy",\n                                        rawName: "v-lazy",\n                                        value: "/assets/icons/img.jpg",\n                                        expression: "\'/assets/icons/img.jpg\'"\n                                      }\n                                    ],\n                                    staticClass: "file-input-icon ml-2"\n                                  })\n                                ]\n                              ),\n                              _vm._v(" "),\n                              _c("input", {\n                                attrs: { type: "file", id: "logo-upload" },\n                                on: { change: _vm.logoChosen }\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-textarea", {\n                                attrs: {\n                                  placeholder: "Body",\n                                  required: "",\n                                  name: "text"\n                                },\n                                model: {\n                                  value: _vm.form[3].description,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[3], "description", $$v)\n                                  },\n                                  expression: "form[3].description"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("v-col", { attrs: { cols: "12" } }, [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "img-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.image ? _vm.image : "Add image"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              attrs: { type: "file", id: "img-upload" },\n                              on: { change: _vm.imageChosen }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "div",\n                        { staticClass: "document" },\n                        [\n                          _c("v-row", [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "document-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.document\n                                        ? _vm.document\n                                        : "Add document"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: { id: "document-upload", type: "file" },\n                              on: {\n                                change: function($event) {\n                                  return _vm.documentChosen($event)\n                                }\n                              }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Features")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[3].features, function(f, index) {\n                        return _c(\n                          "v-row",\n                          {\n                            key: "feature-" + index,\n                            staticClass: "features-block"\n                          },\n                          [\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6 pr-2" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Name" },\n                                  model: {\n                                    value: f.feature_name,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_name", $$v)\n                                    },\n                                    expression: "f.feature_name"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Specification" },\n                                  model: {\n                                    value: f.feature_value,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_value", $$v)\n                                    },\n                                    expression: "f.feature_value"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "span",\n                              {\n                                staticClass: "feature-delete",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.deleteFeature(index)\n                                  }\n                                }\n                              },\n                              [\n                                _c("img", {\n                                  attrs: {\n                                    src: "/assets/icons/delete.png",\n                                    title: "Delete feature"\n                                  }\n                                })\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "add-to-item",\n                              on: { click: _vm.pushFeature }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Add specification\\n                            "\n                              ),\n                              _c("img", {\n                                directives: [\n                                  {\n                                    name: "lazy",\n                                    rawName: "v-lazy",\n                                    value: "/assets/icons/add.jpg",\n                                    expression: "\'/assets/icons/add.jpg\'"\n                                  }\n                                ],\n                                staticClass: "ml-2 fil-input-icon"\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Benefits")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[3].advantages, function(f, index) {\n                        return _c(\n                          "v-col",\n                          { key: "advantages-" + index, attrs: { cols: "12" } },\n                          [\n                            _c(\n                              "v-row",\n                              [\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6 pr-2" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Name" },\n                                      model: {\n                                        value: f.name,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "name", $$v)\n                                        },\n                                        expression: "f.name"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(" "),\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Benefits" },\n                                      model: {\n                                        value: f.value,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "value", $$v)\n                                        },\n                                        expression: "f.value"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item w-100",\n                                attrs: { for: "file-upload-" + index }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                            " +\n                                    _vm._s(f.icon ? f.icon : "Add icon") +\n                                    "\\n                            "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "ml-2 file-input-icon"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: {\n                                id: "file-upload-" + index,\n                                type: "file"\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.iconChosen($event, index)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        { staticClass: "d-flex justify-content-end" },\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "discard-form",\n                              attrs: { width: "auto" },\n                              on: { click: _vm.discard }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Discard\\n                        "\n                              )\n                            ]\n                          ),\n                          _vm._v(" "),\n                          _vm.updatePage\n                            ? _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.update($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            UPDATE\\n                        "\n                                  )\n                                ]\n                              )\n                            : _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.send($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            SEND\\n                        "\n                                  )\n                                ]\n                              )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("input", {\n                        attrs: { type: "hidden" },\n                        domProps: { value: 3 }\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              ),\n              _vm._v(" "),\n              _c(\n                "div",\n                {\n                  staticClass: "tab-pane fade",\n                  class: { "active show": _vm.isActive(2) },\n                  attrs: { id: "ro" }\n                },\n                [\n                  _c(\n                    "v-container",\n                    [\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Stock")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-radio-group",\n                                {\n                                  attrs: { row: "" },\n                                  model: {\n                                    value: _vm.form[2].available,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[2], "available", $$v)\n                                    },\n                                    expression: "form[2].available"\n                                  }\n                                },\n                                [\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 1,\n                                      label: "In stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 1)\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(" "),\n                                  _c("v-radio", {\n                                    attrs: {\n                                      color: "success",\n                                      value: 0,\n                                      label: "Out of stock"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateValues("available", 0)\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("h5", { staticClass: "row-title" }, [\n                            _vm._v("Description")\n                          ]),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: {\n                                  placeholder: "Product name",\n                                  required: "",\n                                  rules: _vm.form[2].nameRules\n                                },\n                                model: {\n                                  value: _vm.form[2].name,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[2], "name", $$v)\n                                  },\n                                  expression: "form[2].name"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Set number" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "sku",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[2].sku,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[2], "sku", $$v)\n                                  },\n                                  expression: "form[2].sku"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "div",\n                                { staticClass: "dropdown-categories" },\n                                [\n                                  _c(\n                                    "button",\n                                    {\n                                      staticClass: "v-select-dropdown",\n                                      attrs: { type: "submit" },\n                                      on: {\n                                        click: function($event) {\n                                          $event.preventDefault()\n                                          return _vm.activateDropdown($event)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    " +\n                                          _vm._s(_vm.isActiveCategory()) +\n                                          "\\n                                    "\n                                      ),\n                                      _vm.dropdown\n                                        ? _c("i", { staticClass: "arrow up" })\n                                        : _c("i", { staticClass: "arrow down" })\n                                    ]\n                                  ),\n                                  _vm._v(" "),\n                                  _vm.dropdown\n                                    ? _c(\n                                        "ul",\n                                        {\n                                          staticClass:\n                                            "position-absolute bg-white category-dropdown list-unstyled"\n                                        },\n                                        _vm._l(\n                                          _vm.groupCategories(_vm.categories),\n                                          function(category) {\n                                            return _c("li", [\n                                              _c(\n                                                "p",\n                                                {\n                                                  staticClass: "parent",\n                                                  attrs: {\n                                                    "data-id": category.id\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.selectCategory(\n                                                        $event\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    "\\n                                            " +\n                                                      _vm._s(category.name)\n                                                  )\n                                                ]\n                                              ),\n                                              _vm._v(" "),\n                                              category.child\n                                                ? _c(\n                                                    "ul",\n                                                    _vm._l(\n                                                      category.child,\n                                                      function(subcategory) {\n                                                        return _c(\n                                                          "li",\n                                                          {\n                                                            attrs: {\n                                                              "data-id":\n                                                                subcategory.id\n                                                            },\n                                                            on: {\n                                                              click: function(\n                                                                $event\n                                                              ) {\n                                                                return _vm.selectCategory(\n                                                                  $event\n                                                                )\n                                                              }\n                                                            }\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              "\\n                                                - " +\n                                                                _vm._s(\n                                                                  subcategory.name\n                                                                ) +\n                                                                "\\n                                            "\n                                                            )\n                                                          ]\n                                                        )\n                                                      }\n                                                    ),\n                                                    0\n                                                  )\n                                                : _vm._e()\n                                            ])\n                                          }\n                                        ),\n                                        0\n                                      )\n                                    : _vm._e()\n                                ]\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c(\n                                "v-text-field",\n                                {\n                                  attrs: { placeholder: "Price" },\n                                  on: {\n                                    keyup: function($event) {\n                                      return _vm.updateValues(\n                                        "price",\n                                        $event.target.value\n                                      )\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.form[2].price,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.form[2], "price", $$v)\n                                    },\n                                    expression: "form[2].price"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    "p",\n                                    {\n                                      staticClass: "m-auto",\n                                      attrs: { slot: "append" },\n                                      slot: "append"\n                                    },\n                                    [\n                                      _vm._v(\n                                        "\\n                                    EUR\\n                                "\n                                      )\n                                    ]\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { staticClass: "pr-2", attrs: { cols: "6" } },\n                            [\n                              _c("v-text-field", {\n                                attrs: { placeholder: "Brand" },\n                                on: {\n                                  keyup: function($event) {\n                                    return _vm.updateValues(\n                                      "brand",\n                                      $event.target.value\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.form[2].brand,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[2], "brand", $$v)\n                                  },\n                                  expression: "form[2].brand"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "v-col",\n                            { staticClass: "m-auto", attrs: { cols: "6" } },\n                            [\n                              _c(\n                                "label",\n                                {\n                                  staticClass: "add-to-item",\n                                  attrs: { for: "logo-upload" }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                                " +\n                                      _vm._s(_vm.logo ? _vm.logo : "Image") +\n                                      "\\n                                "\n                                  ),\n                                  _c("img", {\n                                    directives: [\n                                      {\n                                        name: "lazy",\n                                        rawName: "v-lazy",\n                                        value: "/assets/icons/img.jpg",\n                                        expression: "\'/assets/icons/img.jpg\'"\n                                      }\n                                    ],\n                                    staticClass: "file-input-icon ml-2"\n                                  })\n                                ]\n                              ),\n                              _vm._v(" "),\n                              _c("input", {\n                                attrs: { type: "file", id: "logo-upload" },\n                                on: { change: _vm.logoChosen }\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-col",\n                            { attrs: { cols: "12" } },\n                            [\n                              _c("v-textarea", {\n                                attrs: {\n                                  placeholder: "Body",\n                                  required: "",\n                                  name: "text"\n                                },\n                                model: {\n                                  value: _vm.form[2].description,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.form[2], "description", $$v)\n                                  },\n                                  expression: "form[2].description"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c("v-col", { attrs: { cols: "12" } }, [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "img-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.image ? _vm.image : "Add image"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              attrs: { type: "file", id: "img-upload" },\n                              on: { change: _vm.imageChosen }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c(\n                        "div",\n                        { staticClass: "document" },\n                        [\n                          _c("v-row", [\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item",\n                                attrs: { for: "document-upload" }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                                " +\n                                    _vm._s(\n                                      _vm.document\n                                        ? _vm.document\n                                        : "Add document"\n                                    ) +\n                                    "\\n                                "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "file-input-icon ml-2"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: { id: "document-upload", type: "file" },\n                              on: {\n                                change: function($event) {\n                                  return _vm.documentChosen($event)\n                                }\n                              }\n                            })\n                          ])\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Features")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[2].features, function(f, index) {\n                        return _c(\n                          "v-row",\n                          {\n                            key: "feature-" + index,\n                            staticClass: "features-block"\n                          },\n                          [\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6 pr-2" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Name" },\n                                  model: {\n                                    value: f.feature_name,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_name", $$v)\n                                    },\n                                    expression: "f.feature_name"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "v-col",\n                              { attrs: { cols: "6" } },\n                              [\n                                _c("v-text-field", {\n                                  attrs: { placeholder: "Feature" },\n                                  model: {\n                                    value: f.feature_value,\n                                    callback: function($$v) {\n                                      _vm.$set(f, "feature_value", $$v)\n                                    },\n                                    expression: "f.feature_value"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "span",\n                              {\n                                staticClass: "feature-delete",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.deleteFeature(index)\n                                  }\n                                }\n                              },\n                              [\n                                _c("img", {\n                                  attrs: {\n                                    src: "/assets/icons/delete.png",\n                                    title: "Delete feature"\n                                  }\n                                })\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "add-to-item",\n                              on: { click: _vm.pushFeature }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Add specification\\n                            "\n                              ),\n                              _c("img", {\n                                directives: [\n                                  {\n                                    name: "lazy",\n                                    rawName: "v-lazy",\n                                    value: "/assets/icons/add.jpg",\n                                    expression: "\'/assets/icons/add.jpg\'"\n                                  }\n                                ],\n                                staticClass: "ml-2 fil-input-icon"\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("v-row", { staticClass: "mt-5" }, [\n                        _c("h4", { staticClass: "row-title" }, [\n                          _vm._v("Advantages")\n                        ])\n                      ]),\n                      _vm._v(" "),\n                      _vm._l(_vm.form[2].advantages, function(f, index) {\n                        return _c(\n                          "v-col",\n                          { key: "advantages-" + index, attrs: { cols: "12" } },\n                          [\n                            _c(\n                              "v-row",\n                              [\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6 pr-2" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Name" },\n                                      model: {\n                                        value: f.name,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "name", $$v)\n                                        },\n                                        expression: "f.name"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(" "),\n                                _c(\n                                  "v-col",\n                                  { attrs: { cols: "6" } },\n                                  [\n                                    _c("v-text-field", {\n                                      attrs: { placeholder: "Advantage" },\n                                      model: {\n                                        value: f.value,\n                                        callback: function($$v) {\n                                          _vm.$set(f, "value", $$v)\n                                        },\n                                        expression: "f.value"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(" "),\n                            _c(\n                              "label",\n                              {\n                                staticClass: "add-to-item w-100",\n                                attrs: { for: "file-upload-" + index }\n                              },\n                              [\n                                _vm._v(\n                                  "\\n                            " +\n                                    _vm._s(f.icon ? f.icon : "Add icon") +\n                                    "\\n                            "\n                                ),\n                                _c("img", {\n                                  directives: [\n                                    {\n                                      name: "lazy",\n                                      rawName: "v-lazy",\n                                      value: "/assets/icons/img.jpg",\n                                      expression: "\'/assets/icons/img.jpg\'"\n                                    }\n                                  ],\n                                  staticClass: "ml-2 file-input-icon"\n                                })\n                              ]\n                            ),\n                            _vm._v(" "),\n                            _c("input", {\n                              staticStyle: { display: "none" },\n                              attrs: {\n                                id: "file-upload-" + index,\n                                type: "file"\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.iconChosen($event, index)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      }),\n                      _vm._v(" "),\n                      _c(\n                        "v-row",\n                        { staticClass: "d-flex justify-content-end" },\n                        [\n                          _c(\n                            "v-btn",\n                            {\n                              staticClass: "discard-form",\n                              attrs: { width: "auto" },\n                              on: { click: _vm.discard }\n                            },\n                            [\n                              _vm._v(\n                                "\\n                            Discard\\n                        "\n                              )\n                            ]\n                          ),\n                          _vm._v(" "),\n                          _vm.updatePage\n                            ? _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.update($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            UPDATE\\n                        "\n                                  )\n                                ]\n                              )\n                            : _c(\n                                "v-btn",\n                                {\n                                  staticClass: "submit-form",\n                                  attrs: { width: "auto", right: "" },\n                                  on: {\n                                    click: function($event) {\n                                      $event.stopPropagation()\n                                      $event.preventDefault()\n                                      return _vm.send($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    "\\n                            SEND\\n                        "\n                                  )\n                                ]\n                              )\n                        ],\n                        1\n                      ),\n                      _vm._v(" "),\n                      _c("input", {\n                        attrs: { type: "hidden" },\n                        domProps: { value: 2 }\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              ),\n              _vm._v(" "),\n              _c("p", { staticClass: "text-center text-danger mt-3" }, [\n                _vm._v(\n                  _vm._s(\n                    _vm.form[_vm.lang_id].errors\n                      ? _vm.form[_vm.lang_id].errors\n                      : ""\n                  )\n                )\n              ]),\n              _vm._v(" "),\n              _c("p", { staticClass: "text-center text-success mt-3" }, [\n                _vm._v(\n                  _vm._s(\n                    _vm.form[_vm.lang_id].success\n                      ? _vm.form[_vm.lang_id].success\n                      : ""\n                  )\n                )\n              ])\n            ]\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./resources/js/components/backend/products/AddProduct.vue?vue&type=template&id=2fcd84c3&scoped=true&\n\n// EXTERNAL MODULE: ./resources/js/event/eventbus.js\nvar eventbus = __webpack_require__("./resources/js/event/eventbus.js");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vuetify-loader/lib/loader.js??ref--5-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/backend/products/AddProduct.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nconst Navbar = () => __webpack_require__.e(/*! import() */ "chunk-7").then(__webpack_require__.bind(null, /*! ../includes/Navbar */ "./resources/js/components/backend/includes/Navbar.vue"));\n\n/* harmony default export */ var AddProductvue_type_script_lang_js_ = ({\n  components: {\n    Navbar\n  },\n  props: [\'lang\', \'id\'],\n\n  data() {\n    return {\n      csrf: document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\'),\n      updatePage: false,\n      form: [],\n      image: \'\',\n      logo: \'\',\n      document: \'\',\n      lang_id: 1,\n      active: 2,\n      dropdown: false,\n      updated: false,\n      loading: false\n    };\n  },\n\n  created() {\n    this.lang_id = Vue.ls.get(\'language\', 1);\n\n    let _this = this;\n\n    Vue.ls.on(\'language\', function (val) {\n      _this.lang_id = val;\n    });\n\n    for (let i = 1; i < 4; i++) {\n      Vue.set(this.form, i, {\n        valid: false,\n        available: 1,\n        header: \'\',\n        description: \'\',\n        category: \'\',\n        name: \'\',\n        nameRules: [v => !!v || \'Name is required\'],\n        sku: \'\',\n        price: \'\',\n        brand: \'\',\n        features: [{\n          id: null,\n          feature_name: \'\',\n          feature_value: \'\'\n        }, {\n          id: null,\n          feature_name: \'\',\n          feature_value: \'\'\n        }],\n        advantages: [{\n          id: null,\n          name: \'\',\n          value: \'\',\n          iconFile: null,\n          icon: \'\'\n        }, {\n          id: null,\n          name: \'\',\n          value: \'\',\n          iconFile: null,\n          icon: \'\'\n        }, {\n          id: null,\n          name: \'\',\n          value: \'\',\n          iconFile: null,\n          icon: \'\'\n        }, {\n          id: null,\n          name: \'\',\n          value: \'\',\n          iconFile: null,\n          icon: \'\'\n        }],\n        image: \'\',\n        imageFile: null,\n        document: \'\',\n        documentFile: null,\n        logo: \'\',\n        logoFile: null,\n        activeItem: i,\n        errors: \'\',\n        success: \'\'\n      });\n    }\n\n    this.lang_id = 2;\n    this.$store.commit(\'getDataForm\', []);\n    this.$store.dispatch(\'categories\', {\n      lang_id: this.lang_id\n    });\n\n    if (this.$router.currentRoute.path.includes(\'/edit\')) {\n      this.$store.dispatch(\'singleProduct\', {\n        id: this.$route.params.id,\n        lang: this.lang_id\n      }).then(() => {\n        for (let i = 1; i <= 3; i++) {\n          let data = [];\n          let language = i;\n\n          if (this.product[language][\'id\']) {\n            data = this.product[language];\n          } else {\n            data = Object.keys(this.product).map((item, i) => {\n              if (this.product[item][\'lang_id\']) return this.product[item];\n            });\n            data = data.filter(item => {\n              return item != null;\n            });\n            data = data.find(item => item[\'id\'] !== null);\n            this.form[i][\'name\'] = \'\';\n            this.form[i][\'description\'] = \'\';\n            this.form[i].advantages.forEach(e => {\n              e.name = \'\';\n              e.value = \'\';\n              e.iconFile = null;\n              e.icon = \'\';\n            });\n            this.form[i].features.forEach(e => {\n              e.feature_name = \'\';\n              e.feature_value = \'\';\n            });\n            this.form[i][\'price\'] = data[\'price\'];\n            this.form[i][\'sku\'] = data[\'sku\'];\n            this.form[i][\'image\'] = data[\'image\'];\n            this.form[i][\'document\'] = data[\'document\'];\n            this.form[i][\'brand\'] = data[\'brand\'];\n            this.form[i][\'category\'] = data[\'category\'];\n            this.form[i][\'category_id\'] = data[\'category_id\'];\n          }\n\n          this.image = data[\'image\'].split(\'/\').pop();\n          this.document = data[\'document\'].split(\'/\').pop();\n          this.logo = data[\'brand_logo\'].split(\'/\').pop();\n          /*      if (data.advantages.length < 4) {\n                    while (this.form[i].advantages.length < 4) {\n                        this.form[i].advantages.push({\n                            name: \'\',\n                            value: \'\',\n                            iconFile: null,\n                            icon: \'\'\n                        })\n                    }\n                }*/\n\n          if (!this.product[i][\'name\']) continue;\n\n          for (let elem in this.form[language]) {\n            if (data[elem]) {\n              if (Array.isArray(this.form[language][elem])) {\n                for (let e in data[elem]) {\n                  if (data[\'features\'].length > this.form[language][\'features\'].length) {\n                    if (data[\'features\'] === data[elem]) {\n                      this.form[language][\'features\'].push({\n                        feature_name: \'\',\n                        feature_value: \'\',\n                        id: \'\'\n                      });\n                    }\n                  }\n\n                  if (data[elem][e]) {\n                    for (let i in this.form[language][elem][e]) {\n                      this.form[language][elem][e][i] = data[elem][e][i];\n\n                      if (this.form[language][elem][e][\'icon\']) {\n                        this.form[language][elem][e][i] = data[elem][e][i].split(\'/\').pop();\n                      }\n                    }\n                  }\n                }\n              } else {\n                this.form[language][elem] = data[elem];\n                this.form[language][\'available\'] = parseInt(data[\'available\']);\n                if (data[\'brand_logo\']) this.form[language][\'logo\'] = data[\'brand_logo\'].split(\'/\').pop();\n                if (data[\'image\']) this.form[language][\'image\'] = data[\'image\'].split(\'/\').pop();\n                if (data[\'document\']) this.form[language][\'document\'] = data[\'document\'].split(\'/\').pop();\n              }\n            }\n          }\n        }\n      });\n    }\n  },\n\n  methods: {\n    pushFeature() {\n      this.form[this.lang_id].features.push({\n        feature_name: \'\',\n        feature_value: \'\'\n      });\n    },\n\n    deleteFeature(id) {\n      this.form[this.lang_id].features.splice(id, 1);\n    },\n\n    iconChosen(event, index) {\n      this.form[this.lang_id].advantages[index].icon = event.target.files[0].name;\n      this.form[this.lang_id].advantages[index].iconFile = event.target.files[0];\n    },\n\n    documentChosen(event) {\n      this.form[this.lang_id].document = event.target.files[0].name;\n      this.form[this.lang_id].documentFile = event.target.files[0];\n      this.document = event.target.files[0].name;\n    },\n\n    imageChosen(event) {\n      this.form[this.lang_id].image = event.target.files[0].name;\n      this.form[this.lang_id].imageFile = event.target.files[0];\n    },\n\n    logoChosen(event) {\n      this.form[this.lang_id].logo = event.target.files[0].name;\n      this.form[this.lang_id].logoFile = event.target.files[0];\n    },\n\n    changeLang(event) {},\n\n    setActive(event, menuItem) {\n      /*let thisForm = {...this.form};\n      let language = this.lang_id;*/\n      this.active = menuItem;\n      this.lang_id = menuItem;\n      Vue.ls.set(\'language\', parseInt(menuItem));\n      /*if (Array.from(this.$store.state.dataForm).find(item => item.activeItem === menuItem)) {\n           console.log(\'Getting dataForm\');\n          console.log(this.form);\n          this.form = this.$store.state.dataForm;\n          console.log(this.form);\n      }\n       if (this.updatePage) {\n          if (language !== menuItem) {\n              this.$store.dispatch(\'singleProduct\', {id: this.$route.params.id, lang: menuItem}).then(() => {\n                  let data;\n                  if (this.product[menuItem][\'id\']) {\n                      data = this.product[menuItem];\n                  } else {\n                      data = [];\n                  }\n                   if(data.length){\n                      if (data.advantages.length < 4) {\n                          while (data.advantages.length < 4) {\n                              data.advantages.push({\n                                  name: \'\',\n                                  value: \'\',\n                                  iconFile: null,\n                                  icon: \'\'\n                              })\n                          }\n                      }\n                  }\n                   for (let elem in this.form[menuItem]) {\n                      if (data[elem]) {\n                          if (Array.isArray(this.form[menuItem][elem])) {\n                              for (let e in data[elem]) {\n                                  if (data[elem][e]) {\n                                      if (data[\'features\'].length > this.form[menuItem][\'features\'].length) {\n                                          if (data[\'features\'] === data[elem]) {\n                                              this.form[menuItem][\'features\'].push({\n                                                  feature_name: \'\',\n                                                  feature_value: \'\',\n                                                  id: \'\'\n                                              });\n                                          }\n                                      }\n                                       for (let i in data[elem][e]) {\n                                          this.form[menuItem][elem][e][i] = data[elem][e][i]\n                                          if (this.form[menuItem][elem][e][\'icon\'] && data[elem][e][\'icon\']) {\n                                              this.form[menuItem][elem][e][\'icon\'] = data[elem][e][\'icon\'].split(\'/\').pop()\n                                          }\n                                      }\n                                  }\n                              }\n                          } else {\n                              this.form[menuItem][elem] = data[elem];\n                              this.form[menuItem][\'available\'] = parseInt(data[\'available\']);\n                              if (data[\'brand_logo\']) this.form[menuItem][\'logo\'] = data[\'brand_logo\'].split(\'/\').pop();\n                              if (data[\'image\']) this.form[menuItem][\'image\'] = data[\'image\'].split(\'/\').pop();\n                              if (data[\'document\']) this.form[menuItem][\'document\'] = data[\'document\'].split(\'/\').pop();\n                          }\n                      }\n                  }\n              })\n          }\n      }\n       for(let i = 1;i <= 3;i++){\n          thisForm[i].sku = this.form[2].sku ? this.form[2].sku : (this.form[1].sku ? this.form[1].sku : this.form[3].sku);\n          thisForm[i].category = this.form[2].category ? this.form[2].category : (this.form[1].category ? this.form[1].category : this.form[3].category);\n          thisForm[i].price = this.form[2].price ? this.form[2].price : (this.form[1].price ? this.form[1].price : this.form[3].price);\n          thisForm[i].brand = this.form[2].brand ? this.form[2].brand : (this.form[1].brand ? this.form[1].brand : this.form[3].brand);\n          thisForm[i].logo = this.form[2].logo ? this.form[2].logo : (this.form[1].logo ? this.form[1].logo : this.form[3].logo);\n          thisForm[i].image = this.form[2].image ? this.form[2].image : (this.form[1].image ? this.form[1].image : this.form[3].image);\n          thisForm[i].document = this.form[2].document ? this.form[2].document : (this.form[1].document ? this.form[1].document : this.form[3].document);\n          thisForm[i].available = this.form[i].available;\n      }\n       this.$store.dispatch(\'dataForm\', thisForm)*/\n    },\n\n    isActive(menuItem) {\n      if (this.getRoute(this.$route.path)) {\n        this.updatePage = true;\n      }\n\n      return parseInt(menuItem) === parseInt(this.lang_id);\n    },\n\n    discard() {\n      this.$refs.form.reset();\n      this.form[this.lang_id].logo = \'\';\n      this.form[this.lang_id].logoFile = null;\n      this.form[this.lang_id].image = \'\';\n      this.form[this.lang_id].imageFile = null;\n      this.form[this.lang_id].document = \'\';\n      this.form[this.lang_id].documentFile = null;\n      this.form[this.lang_id].advantages.forEach(e => {\n        e.name = \'\';\n        e.value = \'\';\n      });\n\n      if (this.updatePage) {\n        this.$store.dispatch(\'page\', this.$route.params.pagination);\n      }\n\n      this.$router.go(-1);\n    },\n\n    send() {\n      this.loading = true;\n      /*let trans_fields = [\n              \'advantages\',\n              \'description\',\n              \'features\',\n              \'name\'\n          ],\n           non_trans_fields = [\n              \'available\',\n              \'brand\',\n              \'category\',\n              \'document\',\n              \'documentFile\',\n              \'image\',\n              \'imageFile\',\n              \'logo\',\n              \'logoFile\'\n          ];*/\n\n      this.form.forEach((f, i) => {\n        if (f.name) {\n          let form = new FormData();\n          form.append(\'logo\', f.logoFile);\n          form.append(\'file\', f.imageFile);\n          form.append(\'document\', f.documentFile);\n          f.advantages.forEach((e, i) => {\n            e.iconFile ? form.append(\'icon-\' + i, e.iconFile) : \'\';\n          });\n          form.append(\'data\', JSON.stringify(f));\n          axios.post(\'/admin/products/add\', form).then(res => {\n            if (res.status === 200 && !res.data.error) {\n              if (this.form[i + 1] === undefined || !this.form[i + 1].name) {\n                this.loading = false;\n                this.$router.go(-1);\n              }\n            }\n\n            f.errors = res.data.error;\n          });\n        } else if (!f.name && i === this.lang_id) {\n          this.loading = false;\n          this.form[i].errors = \'Some fields need to be completed\';\n        }\n      });\n    },\n\n    update() {\n      this.loading = true;\n      this.form.forEach((f, i) => {\n        if (f.name) {\n          let form = new FormData();\n          form.append(\'logo\', f.logoFile);\n          form.append(\'file\', f.imageFile);\n          form.append(\'document\', f.documentFile);\n          f.advantages.forEach((e, i) => {\n            e.iconFile ? form.append(\'iconfile-\' + i, e.iconFile) : \'\';\n          });\n          form.append(\'data\', JSON.stringify(f));\n          axios.post(`/admin/products/${this.$route.params.id}`, form).then(res => {\n            if (this.form[i + 1] === undefined || !this.form[i + 1].name) {\n              this.loading = false;\n              this.form[i].success = \'Updated successfully\';\n              setTimeout(() => {\n                this.form[i].success = \'\';\n              }, 1500);\n            }\n          });\n        } else {\n          this.loading = false;\n        }\n      });\n    },\n\n    groupCategories(data) {\n      let categories = data;\n      let items = [];\n      categories.forEach((item, index) => {\n        if (!item.parent_id) {\n          items.push({\n            name: item.data.name,\n            id: item.id,\n            parent_id: item.parent_id,\n            child: []\n          });\n        } else {\n          items.map(elem => elem.id === item.parent_id ? elem.child.push({\n            name: item.data.name,\n            id: item.id,\n            parent_id: item.parent_id\n          }) : \'\');\n        }\n      });\n      return items;\n    },\n\n    activateDropdown() {\n      this.dropdown = !this.dropdown;\n    },\n\n    isActiveCategory() {\n      let id = this.form[this.active].category ? parseInt(this.form[this.active].category) : 0;\n      let categories = this.groupCategories(this.categories);\n\n      if (this.form[this.active].category) {\n        for (let i = 0; i < categories.length; i++) {\n          if (categories[i].id === id) {\n            return categories[i].name;\n          } else {\n            for (let j = 0; j < categories[i].child.length; j++) {\n              if (categories[i].child[j].id === id) {\n                return categories[i].child[j].name;\n              }\n            }\n          }\n        }\n      }\n\n      return \'Select a category\';\n    },\n\n    selectCategory(event) {\n      /*let category_id = event.target.getAttribute(\'data-id\');\n      if (this.form[this.active].category !== category_id) {\n          this.form[this.active].category = $(event.target).attr(\'data-id\');\n      }*/\n      this.updateValues(\'category\', event.target.getAttribute(\'data-id\'));\n      this.dropdown = false;\n    },\n\n    getRoute(route) {\n      let length = route.split("/").length;\n      let array = route.split(\'/\');\n      return array[length - 1] === \'edit\';\n    },\n\n    dropdownFalse() {\n      this.dropdown = false;\n    },\n\n    updateValues(key, value) {\n      for (let lang_id = 1; lang_id <= 3; lang_id++) {\n        this.form[lang_id][key] = value;\n      }\n    }\n\n  },\n\n  mounted() {},\n\n  watch: {\n    lang_id: function (val) {\n      Vue.ls.set(\'language\', val);\n    },\n\n    dropdown(n, o) {\n      if (n) {\n        setTimeout(() => {\n          document.addEventListener(\'click\', this.dropdownFalse);\n        }, 300);\n      } else {\n        document.removeEventListener(\'click\', this.dropdownFalse);\n      }\n    }\n\n  },\n  computed: {\n    categories() {\n      return this.$store.getters.getCategories;\n    },\n\n    product() {\n      return this.$store.getters.getSingleProduct;\n    }\n\n  }\n});\n// CONCATENATED MODULE: ./resources/js/components/backend/products/AddProduct.vue?vue&type=script&lang=js&\n /* harmony default export */ var products_AddProductvue_type_script_lang_js_ = (AddProductvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vuetify-loader/lib/loader.js??ref--5-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/backend/products/AddProduct.vue?vue&type=style&index=0&id=2fcd84c3&scoped=true&lang=css&\n// extracted by mini-css-extract-plugin\n\n// CONCATENATED MODULE: ./resources/js/components/backend/products/AddProduct.vue?vue&type=style&index=0&id=2fcd84c3&scoped=true&lang=css&\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("./node_modules/vue-loader/lib/runtime/componentNormalizer.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify-loader/lib/runtime/installComponents.js\nvar installComponents = __webpack_require__("./node_modules/vuetify-loader/lib/runtime/installComponents.js");\nvar installComponents_default = /*#__PURE__*/__webpack_require__.n(installComponents);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VBtn/index.js\nvar VBtn = __webpack_require__("./node_modules/vuetify/lib/components/VBtn/index.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VGrid/index.js + 9 modules\nvar VGrid = __webpack_require__("./node_modules/vuetify/lib/components/VGrid/index.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VForm/index.js + 1 modules\nvar VForm = __webpack_require__("./node_modules/vuetify/lib/components/VForm/index.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VRadioGroup/index.js + 4 modules\nvar VRadioGroup = __webpack_require__("./node_modules/vuetify/lib/components/VRadioGroup/index.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTextField/index.js\nvar VTextField = __webpack_require__("./node_modules/vuetify/lib/components/VTextField/index.js");\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTextarea/index.js + 2 modules\nvar VTextarea = __webpack_require__("./node_modules/vuetify/lib/components/VTextarea/index.js");\n\n// CONCATENATED MODULE: ./resources/js/components/backend/products/AddProduct.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["default"])(\n  products_AddProductvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "2fcd84c3",\n  null\n  \n)\n\n/* vuetify-loader */\n\n\n\n\n\n\n\n\n\n\ninstallComponents_default()(component, {VBtn: VBtn["VBtn"],VCol: VGrid["VCol"],VContainer: VGrid["VContainer"],VForm: VForm["VForm"],VRadio: VRadioGroup["VRadio"],VRadioGroup: VRadioGroup["VRadioGroup"],VRow: VGrid["VRow"],VTextField: VTextField["VTextField"],VTextarea: VTextarea["VTextarea"]})\n\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/components/backend/products/AddProduct.vue"\n/* harmony default export */ var AddProduct = __webpack_exports__["default"] = (component.exports);\n\n//# sourceURL=webpack:///./resources/js/components/backend/products/AddProduct.vue_+_6_modules?')}}]);