(window.webpackJsonp=window.webpackJsonp||[]).push([["vendors~frontend-chunk-44"],{"./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js ***!
  \*****************************************************************/
/*! exports provided: disableBodyScroll, clearAllBodyScrollLocks, enableBodyScroll */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableBodyScroll\", function() { return disableBodyScroll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearAllBodyScrollLocks\", function() { return clearAllBodyScrollLocks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableBodyScroll\", function() { return enableBodyScroll; });\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Older browsers don't support event options, feature detect it.\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0; // returns true if `el` should be allowed to receive touchmove events.\n\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(e.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n\n    previousBodyOverflowSetting = undefined;\n  }\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nvar disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  } // disableBodyScroll must not have been called on this targetElement before\n\n\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\nvar clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    } // Reset initial clientY.\n\n\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\nvar enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js?")},"./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js ***!
  \**********************************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Module uses injected variables (global) */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! body-scroll-lock */ "./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js");\n\nvar attributes = [\'media\', \'srcset\', \'sizes\', \'src\'];\nvar LazyLoadDirective = {\n  inserted: function (el) {\n    function loadImage() {\n      var imageElement = findChild(el, \'img\');\n      var pictureElement = findChild(el, \'picture\');\n\n      if (imageElement) {\n        setLoadListeners(imageElement);\n        swapAttributes(imageElement);\n      } else if (pictureElement) {\n        var pictureImg = findChild(pictureElement, \'img\');\n        var pictureSources = Array.from(pictureElement.children).filter(function (child) {\n          return child.nodeName === "SOURCE";\n        });\n\n        if (pictureImg) {\n          setLoadListeners(pictureImg);\n\n          if (pictureSources.length) {\n            pictureSources.forEach(function (source) {\n              swapAttributes(source);\n            });\n          }\n\n          swapAttributes(pictureImg);\n        }\n      }\n    }\n\n    function handleIntersect(entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          loadImage();\n          observer.unobserve(el);\n        }\n      });\n    }\n\n    function createObserver() {\n      var options = {\n        root: null,\n        threshold: "0"\n      };\n      var observer = new IntersectionObserver(handleIntersect, options);\n      observer.observe(el);\n    }\n\n    if (window["IntersectionObserver"]) {\n      createObserver();\n    } else {\n      loadImage();\n    }\n  }\n};\n\nfunction swapAttributes(el) {\n  attributes.forEach(function (attribute) {\n    var dataAttribute = el.dataset[attribute];\n\n    if (dataAttribute) {\n      el[attribute] = dataAttribute;\n      el.removeAttribute("data-" + attribute);\n    }\n  });\n}\n\nfunction setLoadListeners(el) {\n  el.addEventListener("load", function () {\n    setTimeout(function () {\n      return el.classList.add("loaded");\n    }, 100);\n  });\n  el.addEventListener("error", function () {\n    return console.log("error");\n  });\n}\n\nfunction findChild(parent, nodeName) {\n  return Array.from(parent.children).find(function (el) {\n    return el.nodeName === nodeName.toUpperCase();\n  });\n}\n\nvar AutoplayObserver = {\n  inserted: function (el) {\n    // getYoutube ID\n    function isYoutubeVideo(url) {\n      // youtube data\n      var youtubeRegex = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n      var ytId = url.match(youtubeRegex) ? RegExp.$1 : false;\n\n      if (ytId) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function autoplayVideo() {\n      var tagName = el.tagName;\n      var autoplay = el.dataset.autoplay;\n\n      if (autoplay) {\n        if (tagName === \'VIDEO\') {\n          el.muted = true;\n          el.autoplay = true;\n          return;\n        }\n\n        if (tagName === \'IFRAME\') {\n          var url = new URL(el.src);\n          var muted = \'muted\';\n\n          if (isYoutubeVideo(el.src)) {\n            muted = \'mute\';\n          } // append autoplay\n\n\n          url.searchParams.append(muted, 1);\n          url.searchParams.append(\'autoplay\', 1);\n          el.src = url.href;\n        }\n      }\n    }\n\n    function handleIntersect(entries, observer) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          autoplayVideo();\n          observer.unobserve(el);\n        }\n      });\n    }\n\n    function createObserver() {\n      var options = {\n        root: null,\n        threshold: "0"\n      };\n      var observer = new IntersectionObserver(handleIntersect, options);\n      observer.observe(el);\n    }\n\n    if (window["IntersectionObserver"]) {\n      createObserver();\n    } else {\n      loadImage();\n    }\n  }\n}; //\n\nvar script = {\n  directives: {\n    lazyload: LazyLoadDirective,\n    autoplayObserver: AutoplayObserver\n  },\n  data: function data() {\n    return {\n      // swipe data\n      initialMouseX: 0,\n      initialMouseY: 0,\n      endMouseX: 0,\n      endMouseY: 0,\n      swipeType: null,\n      IsSwipping: false,\n      isDraggingSwipe: false,\n      // use for mouse wheel\n      prevTime: 0,\n      // swipe effect\n      xSwipeWrapper: 0,\n      ySwipeWrapper: 0,\n      swipeAnimation: null,\n      swipeInterval: null,\n      lightboxInnerWidth: null,\n      // styles data\n      imgIndex: this.index,\n      isVisible: false,\n      paddingBottom: false,\n      imageLoading: false,\n      showThumbs: false,\n      isFullScreenMode: false,\n      // aspect ratio videos\n      aspectRatioVideo: {\n        width: \'auto\',\n        height: \'auto\'\n      },\n      // props to bind styles\n      buttonsVisible: true,\n      scale: 1,\n      top: 0,\n      left: 0,\n      lastX: 0,\n      lastY: 0,\n      isDraging: false,\n      canZoom: true,\n      isZooming: false,\n      transition: \'all .3s ease\',\n      zoomBar: 0,\n      // slideshow playing data\n      isPlayingSlideShow: false,\n      intervalProgress: null,\n      loopData: false,\n      stylesInterval: {\n        \'display\': \'block\'\n      }\n    };\n  },\n  props: {\n    index: {\n      required: true\n    },\n    effect: {\n      type: String,\n      default: \'swipe\'\n    },\n    items: {\n      type: Array,\n      required: true\n    },\n    loop: {\n      type: Boolean,\n      default: true\n    },\n    slideshow: {\n      type: Boolean,\n      default: true\n    },\n    slideshowColorBar: {\n      type: String,\n      default: \'#fa4242\'\n    },\n    slideshowDuration: {\n      type: Number,\n      default: 3000\n    },\n    useZoomBar: {\n      type: Boolean,\n      default: false\n    },\n    closeOnClickOutsideMobile: {\n      type: Boolean,\n      default: false\n    },\n    srcName: {\n      type: String,\n      default: \'src\'\n    },\n    srcSetName: {\n      type: String,\n      default: \'srcset\'\n    },\n    srcThumb: {\n      type: String,\n      default: \'thumb\'\n    },\n    srcMediaType: {\n      type: String,\n      default: \'mediaType\'\n    },\n    overlayColor: {\n      type: String,\n      default: \'rgba(30, 30, 30, .9)\'\n    },\n    zIndex: {\n      type: Number,\n      default: 9999\n    },\n    gallery: {\n      type: Boolean,\n      default: true\n    },\n    fullScreen: {\n      type: Boolean,\n      default: false\n    },\n    thumbsPosition: {\n      type: String,\n      default: \'right\'\n    },\n    youtubeCookies: {\n      type: Boolean,\n      default: true\n    },\n    enableWheelEvent: {\n      type: Boolean,\n      default: false\n    },\n    showCloseButton: {\n      type: Boolean,\n      default: true\n    },\n    disableZoom: {\n      type: Boolean,\n      default: false\n    },\n    dir: {\n      type: String,\n      default: \'ltr\'\n    },\n    enableScrollLock: {\n      type: Boolean,\n      default: true\n    }\n  },\n  watch: {\n    zoomBar: function zoomBar(newVal, prevVal) {\n      var item;\n\n      if (this.isZooming) {\n        if (this.effect == \'swipe\') {\n          item = this.$refs.items[this.imgIndex].childNodes[0];\n        } else {\n          item = this.$refs.items.childNodes[0];\n        }\n\n        var newZoom = 1.6 + newVal / 10;\n        item.style.transform = \'translate3d(calc(-50% + \' + this.left + \'px), calc(-50% + \' + this.top + \'px), 0px) scale3d(\' + newZoom + \', \' + newZoom + \', \' + newZoom + \')\';\n      }\n    },\n    showThumbs: function showThumbs(prev, val) {\n      var widthGalleryBlock = 212;\n      var swipeAnimation = \'all .3s ease\';\n\n      if (window.innerWidth < 767) {\n        widthGalleryBlock = 102;\n        swipeAnimation = null;\n      }\n\n      if (this.thumbsPosition === \'bottom\') {\n        widthGalleryBlock = 0;\n      }\n\n      var self = this;\n      this.swipeAnimation = swipeAnimation;\n\n      if (prev) {\n        if (this.dir === \'rtl\') {\n          this.xSwipeWrapper = this.imgIndex * (window.innerWidth - widthGalleryBlock) + 30 * this.imgIndex;\n        } else {\n          this.xSwipeWrapper = -this.imgIndex * (window.innerWidth - widthGalleryBlock) - 30 * this.imgIndex;\n        }\n      } else {\n        if (this.dir === \'rtl\') {\n          this.xSwipeWrapper = this.imgIndex * window.innerWidth + 30 * this.imgIndex;\n        } else {\n          this.xSwipeWrapper = -this.imgIndex * window.innerWidth - 30 * this.imgIndex;\n        }\n      }\n\n      setTimeout(function () {\n        self.swipeAnimation = null;\n      }, 300);\n    },\n    index: function index(prev, val) {\n      var self = this; // body scroll lock\n\n      var $body = document.querySelector(\'body\');\n\n      if (prev !== null) {\n        // swipe type\n        this.swipeType = null;\n        this.initialMouseY = 0;\n        this.ySwipeWrapper = 0; // set loop from data\n\n        this.loopData = this.loop; // swipe effect case remove loop\n\n        if (this.effect === \'swipe\') {\n          this.loopData = false;\n          window.addEventListener(\'resize\', this.xPositionOnResize);\n        } // add img index\n\n\n        this.imgIndex = prev;\n        this.isVisible = true; // add events listener\n\n        window.addEventListener(\'keydown\', this.eventListener); // add wheel event\n\n        if (this.enableWheelEvent) {\n          window.addEventListener(\'wheel\', this.wheelEvent);\n        } // only in mobile\n\n\n        if (window.innerWidth < 700) {\n          // add click event\n          setTimeout(function () {\n            window.addEventListener(\'click\', self.showButtons);\n          }, 200);\n        }\n\n        if (this.enableScrollLock) {\n          setTimeout(function () {\n            self.setCompensateForScrollbar();\n            Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["disableBodyScroll"])(self.$refs.coolLightbox);\n          }, 50);\n        }\n      } else {\n        // hide and stop slideshow\n        this.isVisible = false;\n        this.stopSlideShow(); // set starts X to 0\n\n        this.startsX = 0;\n        this.initialMouseY = 0;\n        this.swipeType = null; // clear interval\n\n        clearInterval(this.swipeInterval);\n        this.swipeAnimation = null; // finish swipe\n\n        this.isDraggingSwipe = false;\n        this.isZooming = true; // remove events listener\n\n        window.removeEventListener(\'keydown\', this.eventListener);\n\n        if (this.enableScrollLock) {\n          self.removeCompensateForScrollbar();\n          Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["enableBodyScroll"])(self.$refs.coolLightbox);\n        } // remove click event\n\n\n        window.removeEventListener(\'click\', this.showButtons); // remove resize event\n\n        window.removeEventListener(\'resize\', this.xPositionOnResize); // remove wheel event\n\n        if (this.enableWheelEvent) {\n          window.removeEventListener(\'wheel\', this.wheelEvent);\n        }\n      }\n    },\n    imgIndex: function imgIndex(prev, val) {\n      var this$1 = this; // when animation is loaded\n\n      this.$nextTick(function () {\n        if (this$1.effect === \'swipe\') {\n          this$1.setLightboxInnerWidth();\n          this$1.setXPosition(prev);\n        }\n\n        if (prev !== null & val === null) {\n          this$1.$emit("on-open", prev);\n        }\n\n        if (prev !== null) {\n          if (prev !== val) {\n            if (!this$1.getYoutubeUrl(this$1.getItemSrc(prev)) && !this$1.getVimeoUrl(this$1.getItemSrc(prev))) {\n              this$1.stopVideos();\n            }\n          } // if is an image change imageLoading to true\n\n\n          if (!this$1.getVideoUrl(this$1.getItemSrc(prev))) {\n            if (!this$1.is_cached(this$1.getItemSrc(prev))) {\n              this$1.imageLoading = true;\n            }\n          } // add caption padding to Lightbox wrapper\n\n\n          this$1.addCaptionPadding(); // setAspectRatioVideo when is swipe\n\n          if (this$1.effect === \'swipe\') {\n            this$1.setAspectRatioVideo();\n          } else {\n            if (this$1.getVideoUrl(this$1.getItemSrc(prev))) {\n              this$1.setAspectRatioVideo();\n            }\n          }\n        } // reset zoom\n\n\n        this$1.resetZoom(); // reset swipe type\n\n        this$1.swipeType = null;\n        this$1.ySwipeWrapper = 0;\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.enableScrollLock) {\n      this.removeCompensateForScrollbar();\n\n      if (this.$refs.coolLightbox) {\n        Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["enableBodyScroll"])(this.$refs.coolLightbox);\n      }\n    }\n  },\n  methods: {\n    getExtFromItem: function getExtFromItem(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      if (this.checkIfIsObject(imgIndex)) {\n        var item = this.items[imgIndex]; //item extension is specified, so return it\n\n        if (item[\'ext\']) {\n          return item[\'ext\'];\n        }\n\n        return \'mp4\';\n      }\n    },\n    stopVideos: function stopVideos() {\n      var videos = document.getElementsByClassName("cool-lightbox-video");\n\n      var isVideoPlaying = function (video) {\n        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n      };\n\n      if (videos.length > 0) {\n        Array.prototype.forEach.call(videos, function (video) {\n          var type = video.tagName;\n\n          if (type === \'IFRAME\') {\n            var iframeSrc = video.src;\n            return video.src = iframeSrc;\n          }\n\n          if (isVideoPlaying(video)) {\n            return video.pause();\n          }\n        });\n      }\n    },\n    removeCompensateForScrollbar: function removeCompensateForScrollbar() {\n      document.body.classList.remove("compensate-for-scrollbar");\n      var noscrollStyle = document.getElementById("coollightbox-style-noscroll");\n\n      if (noscrollStyle !== null) {\n        document.getElementById("coollightbox-style-noscroll").remove();\n      }\n    },\n    setCompensateForScrollbar: function setCompensateForScrollbar() {\n      var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n      if (!isMobile && document.body.scrollHeight > window.innerHeight) {\n        document.getElementsByTagName(\'head\')[0].insertAdjacentHTML(\'beforeend\', \'<style id="coollightbox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:\' + (window.innerWidth - document.documentElement.clientWidth) + "px;}</style>");\n        document.body.classList.add("compensate-for-scrollbar");\n      }\n    },\n    setAutoplay: function setAutoplay(itemIndex) {\n      if (this.checkIfIsObject(itemIndex) && this.items[itemIndex].hasOwnProperty(\'autoplay\') && this.items[itemIndex].autoplay) {\n        return true;\n      }\n\n      return false;\n    },\n    toggleFullScreenMode: function toggleFullScreenMode() {\n      if (this.isFullScreenMode) {\n        this.closeFullscreen();\n      } else {\n        this.fullScreenMode();\n      }\n\n      this.isFullScreenMode = !this.isFullScreenMode;\n    },\n    closeFullscreen: function closeFullscreen() {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        /* Firefox */\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        /* Chrome, Safari and Opera */\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        /* IE/Edge */\n        document.msExitFullscreen();\n      }\n    },\n    fullScreenMode: function fullScreenMode() {\n      /* Get the documentElement (<html>) to display the page in fullscreen */\n      var elem = document.documentElement;\n\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        /* Firefox */\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        /* Chrome, Safari and Opera */\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        /* IE/Edge */\n        elem.msRequestFullscreen();\n      }\n    },\n    // check if event is arrow button or toolbar button\n    checkIfIsButton: function checkIfIsButton(event) {\n      var elements = \'.cool-lightbox__iframe *, .cool-lightbox-button, .cool-lightbox-button *, .cool-lightbox-toolbar__btn, .cool-lightbox-toolbar__btn *, .cool-lightbox-caption h6, .cool-lightbox-caption p, .cool-lightbox-caption a\';\n\n      if (event.target.matches(elements)) {\n        return true;\n      }\n\n      return false;\n    },\n    // start swipe event\n    startSwipe: function startSwipe(event) {\n      if (this.isZooming) {\n        return false;\n      } // check if is some button\n\n\n      if (this.checkIfIsButton(event)) {\n        return false;\n      } // clear interval\n\n\n      clearInterval(this.swipeInterval);\n      this.swipeAnimation = null; // starts swipe\n\n      this.isDraggingSwipe = true;\n      this.initialMouseX = this.getMouseXPosFromEvent(event);\n      this.initialMouseY = this.getMouseYPosFromEvent(event);\n    },\n    // continue swipe event\n    continueSwipe: function continueSwipe(event) {\n      if (this.isDraggingSwipe) {\n        this.IsSwipping = true;\n        var currentPosX = this.getMouseXPosFromEvent(event);\n        var currentPosY = this.getMouseYPosFromEvent(event);\n        var windowWidth = this.lightboxInnerWidth; // diffs\n\n        var diffX = Math.abs(currentPosX - this.initialMouseX);\n        var diffY = Math.abs(currentPosY - this.initialMouseY); // swipe type\n\n        if (this.swipeType == null) {\n          if (diffY > 5 || diffX > 5) {\n            if (diffY > diffX) {\n              this.swipeType = \'v\';\n            } else {\n              this.swipeType = \'h\';\n            }\n          }\n        } // swipe\n\n\n        if (this.swipeType == \'h\') {\n          // swipe wrapper\n          if (this.dir === \'rtl\') {\n            this.xSwipeWrapper = windowWidth * this.imgIndex + currentPosX - this.initialMouseX + 30 * this.imgIndex;\n          } else {\n            this.xSwipeWrapper = -(windowWidth * this.imgIndex) + currentPosX - this.initialMouseX - 30 * this.imgIndex;\n          }\n        } else {\n          this.ySwipeWrapper = currentPosY - this.initialMouseY;\n        } // mobile caseS\n\n\n        if (event.type === \'touchmove\') {\n          this.endMouseX = this.getMouseXPosFromEvent(event);\n          this.endMouseY = this.getMouseYPosFromEvent(event);\n        }\n      }\n    },\n    // end swipe event\n    endSwipe: function endSwipe(event) {\n      if (this.checkIfIsButton(event) && this.initialMouseX === 0) {\n        return false;\n      } // event check is dragging and swipe\n\n\n      var self = this;\n      var swipeType = this.swipeType;\n      this.isDraggingSwipe = false; // horizontal swipe type\n\n      if (this.initialMouseX === 0 && swipeType == \'h\') {\n        return false;\n      } // touch end fixes\n\n\n      if (event.type !== \'touchend\') {\n        this.endMouseX = this.getMouseXPosFromEvent(event);\n        this.endMouseY = this.getMouseYPosFromEvent(event);\n      } else {\n        if (this.endMouseX === 0) {\n          return;\n        }\n      } // check if is dragged \n\n\n      if (this.endMouseX - this.initialMouseX === 0 && swipeType == \'h\' || this.isZooming || this.endMouseY - this.initialMouseY === 0 && swipeType == \'v\') {\n        return;\n      } // set swipe animation\n\n\n      this.setSwipeAnimation(); // reset swipe data\n\n      setTimeout(function () {\n        self.IsSwipping = false;\n        self.initialMouseX = 0;\n        self.endMouseX = 0;\n      }, 10); // type of swipe\n\n      if (this.swipeType === \'h\') {\n        // if the swipe is to the right\n        if (this.endMouseX - this.initialMouseX < -40) {\n          if (this.dir === \'rtl\') {\n            return this.swipeToLeft();\n          }\n\n          return this.swipeToRight();\n        } // if the swipe is to the left\n\n\n        if (this.endMouseX - this.initialMouseX > 40) {\n          if (this.dir === \'rtl\') {\n            return this.swipeToRight();\n          }\n\n          return this.swipeToLeft();\n        }\n      }\n\n      if (this.swipeType === \'v\') {\n        var diffY = Math.abs(this.endMouseY - this.initialMouseY); // diff Y\n\n        if (diffY >= 90) {\n          this.close();\n        } else {\n          this.ySwipeWrapper = 0;\n        }\n      }\n\n      this.swipeType = null;\n      var windowWidth = this.lightboxInnerWidth;\n\n      if (this.dir === \'rtl\') {\n        this.xSwipeWrapper = this.imgIndex * windowWidth + 30 * this.imgIndex;\n        return;\n      }\n\n      this.xSwipeWrapper = -this.imgIndex * windowWidth - 30 * this.imgIndex;\n    },\n    // swipe to left effect\n    swipeToLeft: function swipeToLeft() {\n      if (!this.hasPrevious && this.effect === \'swipe\') {\n        if (this.dir === \'rtl\') {\n          return this.xSwipeWrapper = this.imgIndex * this.lightboxInnerWidth + 30 * this.imgIndex;\n        }\n\n        return this.xSwipeWrapper = -this.imgIndex * this.lightboxInnerWidth - 30 * this.imgIndex;\n      }\n\n      this.changeIndexToPrev();\n    },\n    // swipe to right effect\n    swipeToRight: function swipeToRight() {\n      if (!this.hasNext && this.effect === \'swipe\') {\n        if (this.dir === \'rtl\') {\n          return this.xSwipeWrapper = this.imgIndex * this.lightboxInnerWidth + 30 * this.imgIndex;\n        }\n\n        return this.xSwipeWrapper = -this.imgIndex * this.lightboxInnerWidth - 30 * this.imgIndex;\n      }\n\n      this.changeIndexToNext();\n    },\n    // function that return x position from event\n    getMouseXPosFromEvent: function getMouseXPosFromEvent(event) {\n      if (event.type.indexOf(\'mouse\') !== -1) {\n        return event.clientX;\n      }\n\n      return event.touches[0].clientX;\n    },\n    // function that return Y position from event\n    getMouseYPosFromEvent: function getMouseYPosFromEvent(event) {\n      if (event.type.indexOf(\'mouse\') !== -1) {\n        return event.clientY;\n      }\n\n      return event.touches[0].clientY;\n    },\n    // check if the image is cached\n    is_cached: function is_cached(src) {\n      var image = new Image();\n      image.src = src;\n      return image.complete;\n    },\n    // image loaded event\n    imageLoaded: function imageLoaded() {\n      this.imageLoading = false;\n    },\n    // get video url\n    itemThumb: function itemThumb(itemUrl, itemIndex) {\n      var thumb = this.getItemThumb(itemIndex);\n\n      if (thumb) {\n        return thumb;\n      }\n\n      var youtubeID = this.getYoutubeID(itemUrl);\n\n      if (youtubeID) {\n        return \'https://img.youtube.com/vi/\' + youtubeID + \'/mqdefault.jpg\';\n      }\n\n      var vimeoID = this.getVimeoID(itemUrl);\n\n      if (vimeoID) {\n        return false;\n      }\n\n      return itemUrl;\n    },\n    isItemPicture: function isItemPicture(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item.picture;\n      }\n\n      return false;\n    },\n    getPictureSources: function getPictureSources(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var picture = this.items[imgIndex].picture;\n      return picture.sources ? picture.sources : [];\n    },\n    // get item src\n    getItemSrc: function getItemSrc(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item[this.srcName];\n      }\n\n      return item;\n    },\n    getItemSrcSet: function getItemSrcSet(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item[this.srcSetName];\n      }\n\n      return null;\n    },\n    getItemSizes: function getItemSizes(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item.sizes;\n      }\n\n      return null;\n    },\n    getItemAlt: function getItemAlt(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item.alt;\n      }\n\n      return null;\n    },\n    getItemThumb: function getItemThumb(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[imgIndex];\n\n      if (this.checkIfIsObject(imgIndex)) {\n        return item[this.srcThumb];\n      }\n\n      if (this.getVideoUrl(item)) {\n        return false;\n      }\n\n      return item;\n    },\n    // get item media type\n    getMediaType: function getMediaType(imgIndex) {\n      if (imgIndex === null) {\n        return false;\n      }\n\n      if (this.checkIfIsObject(imgIndex)) {\n        var item$1 = this.items[imgIndex]; //item type is specified, so return it\n\n        if (item$1[this.srcMediaType]) {\n          return item$1[this.srcMediaType];\n        }\n      }\n\n      if (this.getVideoUrl(this.getItemSrc(imgIndex))) {\n        return \'video\';\n      } else if (this.getPDFurl(this.getItemSrc(imgIndex))) {\n        return \'iframe\';\n      } else {\n        return \'image\';\n      }\n    },\n    // toggle play slideshow event\n    togglePlaySlideshow: function togglePlaySlideshow() {\n      if (!this.slideshow) {\n        return false;\n      }\n\n      if (!this.hasNext && !this.loopData) {\n        return false;\n      }\n\n      this.isPlayingSlideShow = !this.isPlayingSlideShow; // if is playing move if not stop it\n\n      if (this.isPlayingSlideShow) {\n        this.move();\n      } else {\n        this.stopSlideShow();\n      }\n    },\n    // stop slideshow\n    stopSlideShow: function stopSlideShow() {\n      this.isPlayingSlideShow = false;\n      clearInterval(this.intervalProgress);\n      this.stylesInterval = {\n        \'transform\': \'scaleX(0)\',\n        \'transition\': \'none\'\n      };\n    },\n    // move event in zoom\n    move: function move() {\n      var self = this;\n      this.progressWidth = 100;\n      this.intervalProgress = setInterval(frame, this.slideshowDuration + 90);\n      self.stylesInterval = {\n        \'transform\': \'scaleX(1)\',\n        \'background\': this.slideshowColorBar,\n        \'transition-duration\': this.slideshowDuration + \'ms\'\n      };\n\n      function frame() {\n        self.stylesInterval = {\n          \'transform\': \'scaleX(0)\',\n          \'transition\': \'none\'\n        };\n\n        if (self.dir === \'rtl\') {\n          self.onPrevClick(true);\n        } else {\n          self.onNextClick(true);\n        }\n\n        if (!self.hasNext && !self.loopData) {\n          self.stopSlideShow();\n        } else {\n          setTimeout(function () {\n            self.stylesInterval = {\n              \'transform\': \'scaleX(1)\',\n              \'background\': self.slideshowColorBar,\n              \'transition-duration\': self.slideshowDuration + \'ms\'\n            };\n          }, 50);\n        }\n      }\n    },\n    // show buttons event\n    showButtons: function showButtons(event) {\n      if (!this.checkIfIsButton(event)) {\n        var self = this;\n        setTimeout(function () {\n          self.buttonsVisible = !self.buttonsVisible;\n        }, 100);\n      }\n    },\n    // check if is allowed to drag\n    checkMouseEventPropButton: function checkMouseEventPropButton(button) {\n      if (!this.isZooming) {\n        return false;\n      } // mouse left btn click\n\n\n      return button === 0;\n    },\n    // handle mouse down event\n    handleMouseDown: function handleMouseDown(e) {\n      if (!this.checkMouseEventPropButton(e.button)) {\n        return;\n      }\n\n      this.lastX = e.clientX;\n      this.lastY = e.clientY;\n      this.isDraging = true;\n      e.stopPropagation();\n    },\n    // handle mouse up event\n    handleMouseUp: function handleMouseUp(e) {\n      if (!this.checkMouseEventPropButton(e.button)) {\n        return;\n      }\n\n      this.isDraging = false;\n      this.lastX = this.lastY = 0; // Fix drag zoom out\n\n      var thisContext = this;\n      setTimeout(function () {\n        thisContext.canZoom = true;\n      }, 100);\n    },\n    // handle mouse move event\n    handleMouseMove: function handleMouseMove(e) {\n      if (!this.checkMouseEventPropButton(e.button)) {\n        return;\n      }\n\n      if (this.isDraging) {\n        this.top = this.top - this.lastY + e.clientY;\n        this.left = this.left - this.lastX + e.clientX;\n        this.lastX = e.clientX;\n        this.lastY = e.clientY;\n        this.canZoom = false;\n        var item = e.target.parentNode.nodeName === \'PICTURE\' ? e.target.parentNode.parentNode : e.target.parentNode;\n        var newZoom = 1.6 + this.zoomBar / 10;\n        item.style.transform = \'translate3d(calc(-50% + \' + this.left + \'px), calc(-50% + \' + this.top + \'px), 0px) scale3d(\' + newZoom + \', \' + newZoom + \', \' + newZoom + \')\';\n      }\n\n      e.stopPropagation();\n    },\n    // zoom image event\n    zoomImage: function zoomImage(indexImage) {\n      if (this.disableZoom) {\n        return false;\n      }\n\n      if (window.innerWidth < 700) {\n        return false;\n      }\n\n      if (!this.canZoom) {\n        return false;\n      }\n\n      if (this.IsSwipping) {\n        return false;\n      } // item zoom\n\n\n      var item;\n\n      if (this.effect == \'swipe\') {\n        item = this.$refs.items[this.imgIndex].childNodes[0];\n      } else {\n        item = this.$refs.items.childNodes[0];\n      } // zoom variables\n\n\n      var isZooming = this.isZooming;\n      var thisContext = this; // Is zooming check\n\n      if (isZooming) {\n        if (!this.isDraging) {\n          this.isZooming = false;\n          this.zoomBar = 0;\n        }\n      } else {\n        this.isZooming = true;\n      } // check if is zooming\n\n\n      if (this.isZooming) {\n        this.stopSlideShow(); // add scale\n\n        item.style.transform = \'translate3d(calc(-50%), calc(-50%), 0px) scale3d(1.6, 1.6, 1.6)\'; // hide buttons\n\n        this.buttonsVisible = false; // fix drag transition problems\n\n        setTimeout(function () {\n          thisContext.transition = \'all .0s ease\';\n        }, 100);\n      } else {\n        // show buttons \n        this.buttonsVisible = true;\n        this.resetZoom();\n      }\n    },\n    // Reset zoom data\n    resetZoom: function resetZoom() {\n      this.scale = 1;\n      this.left = 0;\n      this.top = 0;\n      this.zoomBar = 0;\n      this.isZooming = false;\n      this.swipeType = null;\n      this.transition = \'all .3s ease\'; // only if index is not null\n\n      if (this.imgIndex != null) {\n        var item;\n\n        if (this.effect == \'swipe\') {\n          item = this.$refs.items[this.imgIndex].childNodes[0];\n        } else {\n          item = this.$refs.items.childNodes[0];\n        } // reset styles\n\n\n        if (this.disableZoom) {\n          item.style.transform = \'translate3d(calc(-50% + \' + this.left + \'px), calc(-50% + \' + this.top + \'px), 0px)\';\n        } else {\n          item.style.transform = \'translate3d(calc(-50% + \' + this.left + \'px), calc(-50% + \' + this.top + \'px), 0px) scale3d(1, 1, 1)\';\n        }\n\n        this.initialMouseX = 0;\n\n        if (window.innerWidth >= 700) {\n          this.buttonsVisible = true;\n        }\n      }\n    },\n    // Aspect Ratio responsive video\n    setAspectRatioVideo: function setAspectRatioVideo() {\n      var thisContext = this;\n      var el = document.getElementsByClassName(\'cool-lightbox__inner\');\n      el = el[0];\n      var computedStyle = getComputedStyle(el);\n\n      if (window.innerWidth < 1440) {\n        var width = el.clientWidth;\n        var height = Math.round(width / 16 * 9);\n        this.aspectRatioVideo.height = height + \'px\';\n        this.aspectRatioVideo.width = width + \'px\';\n      } else {\n        setTimeout(function () {\n          var height = el.clientHeight;\n          height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n          var width = height / 9 * 16;\n          thisContext.aspectRatioVideo.height = height + \'px\';\n          thisContext.aspectRatioVideo.width = width + \'px\';\n        }, 150);\n      }\n    },\n    // close event\n    close: function close() {\n      this.stopSlideShow();\n      this.swipeType = null;\n      this.$emit("close", this.imgIndex);\n      this.showThumbs = false;\n      this.imgIndex = null;\n    },\n    wheelEvent: function wheelEvent(event) {\n      var delay = 350;\n      var currentTime = new Date().getTime();\n      var direction = event.deltaY > 0 ? \'top\' : \'down\';\n\n      if (currentTime - this.prevTime < delay) {\n        return;\n      }\n\n      this.prevTime = currentTime;\n\n      switch (direction) {\n        case \'top\':\n          return this.changeIndexToPrev();\n\n        case \'down\':\n          return this.changeIndexToNext();\n      }\n    },\n    // close event click outside\n    closeModal: function closeModal(event) {\n      if (!this.closeOnClickOutsideMobile) {\n        if (window.innerWidth < 700) {\n          return false;\n        }\n      }\n\n      if (this.IsSwipping) {\n        return false;\n      }\n\n      var elements = \'.cool-lightbox__iframe, .cool-lightbox__iframe *, .cool-lightbox-zoom, .cool-lightbox-zoom *, .cool-lightbox-thumbs, svg, path, rect, .cool-lightbox-thumbs *, .cool-lightbox-button, .cool-lightbox-toolbar__btn, .cool-lightbox-toolbar__btn *, .cool-lightbox-button *, .cool-lightbox__slide__img *, .cool-lightbox-video, .cool-lightbox-caption h6, .cool-lightbox-caption p, .cool-lightbox-caption a\';\n\n      if (!event.target.matches(elements)) {\n        this.close();\n      }\n    },\n    // set swipe animation\n    setSwipeAnimation: function setSwipeAnimation() {\n      var self = this;\n      clearInterval(this.swipeInterval);\n      this.swipeAnimation = null; // animation swipe\n\n      this.swipeAnimation = \'all .3s ease\';\n      this.swipeInterval = setInterval(interval, 330);\n\n      function interval() {\n        self.swipeAnimation = null;\n      }\n    },\n    // next slide event\n    onNextClick: function onNextClick(isFromSlideshow) {\n      if (isFromSlideshow === void 0) isFromSlideshow = false;\n\n      if (this.isZooming) {\n        return false;\n      }\n\n      if (!isFromSlideshow) {\n        this.stopSlideShow();\n      }\n\n      this.setSwipeAnimation();\n\n      if (this.dir === \'rtl\') {\n        return this.changeIndexToPrev();\n      }\n\n      this.changeIndexToNext();\n    },\n    // prev slide event\n    onPrevClick: function onPrevClick(isFromSlideshow) {\n      if (isFromSlideshow === void 0) isFromSlideshow = false;\n\n      if (this.isZooming) {\n        return false;\n      }\n\n      if (!isFromSlideshow) {\n        this.stopSlideShow();\n      }\n\n      this.setSwipeAnimation();\n\n      if (this.dir === \'rtl\') {\n        return this.changeIndexToNext();\n      }\n\n      this.changeIndexToPrev();\n    },\n    // change to next index\n    changeIndexToNext: function changeIndexToNext() {\n      if (this.hasNext) {\n        this.onIndexChange(this.imgIndex + 1);\n      } else {\n        // only if has loop prop\n        if (this.loopData) {\n          this.onIndexChange(0);\n        }\n      }\n    },\n    // change to prev index\n    changeIndexToPrev: function changeIndexToPrev() {\n      if (this.hasPrevious) {\n        this.onIndexChange(this.imgIndex - 1);\n      } else {\n        // only if has loop prop\n        if (this.loopData) {\n          this.onIndexChange(this.items.length - 1);\n        }\n      }\n    },\n    // set lightbox inner width\n    setLightboxInnerWidth: function setLightboxInnerWidth() {\n      var el = document.getElementsByClassName(\'cool-lightbox__inner\');\n      var width = el[0].clientWidth;\n      this.lightboxInnerWidth = width;\n    },\n    // x position on resize event\n    xPositionOnResize: function xPositionOnResize() {\n      this.setLightboxInnerWidth();\n      var index = this.imgIndex;\n\n      if (this.dir === \'rtl\') {\n        this.xSwipeWrapper = index * this.lightboxInnerWidth + 30 * index;\n        return;\n      } // set x position\n\n\n      this.xSwipeWrapper = -index * this.lightboxInnerWidth - 30 * index;\n    },\n    // set x position by img index\n    setXPosition: function setXPosition(index) {\n      if (this.dir === \'rtl\') {\n        this.xSwipeWrapper = index * this.lightboxInnerWidth + 30 * index;\n        return;\n      } // set x position\n\n\n      this.xSwipeWrapper = -index * this.lightboxInnerWidth - 30 * index;\n      return;\n    },\n    // index change\n    onIndexChange: function onIndexChange(index) {\n      var self = this;\n      this.imgIndex = index;\n      this.$emit(\'on-change\', index);\n      setTimeout(function () {\n        self.$emit(\'on-change-end\', index);\n      }, 400);\n    },\n    // caption size \n    addCaptionPadding: function addCaptionPadding() {\n      if (this.checkIfIsObject(this.imgIndex) && (this.items[this.imgIndex].title || this.items[this.imgIndex].descripcion)) {\n        var el = document.getElementsByClassName(\'cool-lightbox-caption\');\n\n        if (el.length > 0) {\n          this.paddingBottom = el[0].offsetHeight;\n        }\n      } else {\n        this.paddingBottom = 60;\n      }\n    },\n    getPDFurl: function getPDFurl(url) {\n      if (this.imgIndex === null) {\n        return false;\n      }\n\n      var str = new String(url);\n\n      if (str.endsWith(\'.pdf\')) {\n        return url;\n      }\n\n      return false;\n    },\n    // check if is video\n    getVideoUrl: function getVideoUrl(itemSrc) {\n      var youtubeUrl = this.getYoutubeUrl(itemSrc);\n      var vimeoUrl = this.getVimeoUrl(itemSrc);\n      var mp4Url = this.checkIsMp4(itemSrc);\n\n      if (youtubeUrl) {\n        return youtubeUrl;\n      }\n\n      if (vimeoUrl) {\n        return vimeoUrl;\n      }\n\n      if (mp4Url) {\n        return mp4Url;\n      }\n\n      return false;\n    },\n    // getYoutube ID\n    getYoutubeID: function getYoutubeID(url) {\n      // youtube data\n      var youtubeRegex = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n      var ytId = url.match(youtubeRegex) ? RegExp.$1 : false;\n\n      if (ytId) {\n        return ytId;\n      }\n\n      return false;\n    },\n    // get youtube url\n    getYoutubeUrl: function getYoutubeUrl(url) {\n      // youtube data\n      var ytId = this.getYoutubeID(url); // if is youtube video\n\n      if (ytId) {\n        // check if allows youtube cookies\n        if (this.youtubeCookies) {\n          return \'https://www.youtube.com/embed/\' + ytId;\n        }\n\n        return \'https://www.youtube-nocookie.com/embed/\' + ytId;\n      }\n\n      return false;\n    },\n    // vimeo ID\n    getVimeoID: function getVimeoID(url) {\n      // if is vimeo video\n      var result = url.match(/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i);\n\n      if (result !== null) {\n        return result[1];\n      }\n\n      return false;\n    },\n    // get vimeo url\n    getVimeoUrl: function getVimeoUrl(url) {\n      // if is vimeo video\n      var result = url.match(/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i);\n\n      if (result !== null) {\n        return \'//player.vimeo.com/video/\' + result[1] + \'?hd=1&show_title=1&show_byline=1&show_portrait=0&fullscreen=1\';\n      }\n\n      return false;\n    },\n    // check if video is mp4\n    checkIsMp4: function checkIsMp4(url) {\n      if (this.imgIndex === null) {\n        return false;\n      }\n\n      var str = new String(url);\n\n      if (str.indexOf(\'.mp4\') !== -1 || str.indexOf(\'.mov\') !== -1 || str.indexOf(\'.webm\') !== -1 || str.indexOf(\'.ogg\') !== -1 || str.indexOf(\'.avi\') !== -1) {\n        return url;\n      }\n\n      return false;\n    },\n    // if is video get extension\n    getVideoExt: function getVideoExt(url) {\n      if (this.imgIndex === null) {\n        return false;\n      }\n\n      var str = new String(url);\n\n      if (str.indexOf(\'.mp4\') !== -1 || str.indexOf(\'.mov\') !== -1) {\n        return \'mp4\';\n      }\n\n      if (str.indexOf(\'.webm\') !== -1) {\n        return \'webm\';\n      }\n\n      if (str.indexOf(\'.ogg\') !== -1) {\n        return \'ogg\';\n      }\n\n      if (str.indexOf(\'.avi\') !== -1) {\n        return \'avi\';\n      }\n\n      return false;\n    },\n    // check if item is object\n    checkIfIsObject: function checkIfIsObject(itemIndex) {\n      var item = this.items[itemIndex];\n\n      if (typeof item === \'object\' && item !== null) {\n        return true;\n      }\n\n      return false;\n    },\n    // arrows and escape events\n    eventListener: function eventListener(e) {\n      switch (e.keyCode) {\n        case 39:\n          return this.onNextClick();\n\n        case 37:\n          return this.onPrevClick();\n\n        case 38:\n        case 40:\n        case \' \':\n          return e.preventDefault();\n\n        case 27:\n          return this.close();\n      }\n    }\n  },\n  computed: {\n    // Images wrapper styles to use drag and zoom\n    imgWrapperStyle: function imgWrapperStyle() {\n      return {\n        top: "50%",\n        left: "50%",\n        transition: this.transition\n      };\n    },\n    // lightbox styles\n    lightboxStyles: function lightboxStyles() {\n      return {\n        \'z-index\': this.zIndex,\n        \'background-color\': this.overlayColor\n      };\n    },\n    innerStyles: function innerStyles() {\n      return {\n        \'padding-bottom\': this.paddingBottom + \'px\'\n      };\n    },\n    // get item src\n    itemSrc: function itemSrc() {\n      if (this.imgIndex === null) {\n        return false;\n      }\n\n      var item = this.items[this.imgIndex];\n\n      if (this.checkIfIsObject(this.imgIndex)) {\n        return item[this.srcName];\n      }\n\n      return item;\n    },\n    // Lightbox classes\n    lightboxClasses: function lightboxClasses() {\n      var classesReturn = [{\n        \'cool-lightbox--can-zoom\': this.canZoom && !this.disableZoom\n      }, {\n        \'cool-lightbox--zoom-disabled\': this.disableZoom\n      }, {\n        \'cool-lightbox--is-zooming\': this.isZooming\n      }, {\n        \'cool-lightbox--show-thumbs\': this.showThumbs\n      }, {\n        \'cool-lightbox--is-swipping\': this.isDraggingSwipe\n      }];\n      var classString = \'cool-lightbox--thumbs-\' + this.thumbsPosition;\n      classesReturn.push(classString);\n      return classesReturn;\n    },\n    // Buttons classes\n    buttonsClasses: function buttonsClasses() {\n      return {\n        \'hidden\': !this.buttonsVisible\n      };\n    },\n    // check if the slide has next element\n    hasNextButton: function hasNextButton() {\n      if (this.dir === \'rtl\') {\n        return this.imgIndex - 1 >= 0;\n      }\n\n      return this.imgIndex + 1 < this.items.length;\n    },\n    // check if the slide has previous element \n    hasPreviousButton: function hasPreviousButton() {\n      if (this.dir === \'rtl\') {\n        return this.imgIndex + 1 < this.items.length;\n      }\n\n      return this.imgIndex - 1 >= 0;\n    },\n    // check if the slide has next element\n    hasNext: function hasNext() {\n      return this.imgIndex + 1 < this.items.length;\n    },\n    // check if the slide has previous element \n    hasPrevious: function hasPrevious() {\n      return this.imgIndex - 1 >= 0;\n    }\n  }\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== \'boolean\') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === \'function\' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nvar normalizeComponent_1 = normalizeComponent;\n/* script */\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-modal"\n    }\n  }, [_vm.isVisible ? _c(\'div\', {\n    ref: "coolLightbox",\n    staticClass: "cool-lightbox",\n    class: _vm.lightboxClasses,\n    style: _vm.lightboxStyles,\n    on: {\n      "click": _vm.closeModal\n    }\n  }, [_vm.gallery ? _c(\'div\', {\n    staticClass: "cool-lightbox-thumbs"\n  }, [_c(\'div\', {\n    staticClass: "cool-lightbox-thumbs__list"\n  }, _vm._l(_vm.items, function (item, itemIndex) {\n    return _c(\'button\', {\n      key: itemIndex,\n      staticClass: "cool-lightbox__thumb",\n      class: {\n        active: itemIndex === _vm.imgIndex,\n        \'is-video\': _vm.getMediaType(itemIndex) === \'video\'\n      },\n      attrs: {\n        "type": "button"\n      },\n      on: {\n        "click": function ($event) {\n          _vm.imgIndex = itemIndex;\n        }\n      }\n    }, [_vm.getMediaType(itemIndex) === \'video\' ? _c(\'svg\', {\n      staticClass: "cool-lightbox__thumb__icon",\n      attrs: {\n        "xmlns": "http://www.w3.org/2000/svg",\n        "viewBox": "0 0 24 24"\n      }\n    }, [_c(\'path\', {\n      attrs: {\n        "d": "M6.5 5.4v13.2l11-6.6z"\n      }\n    })]) : _vm._e(), _vm._v(" "), _c(\'img\', {\n      attrs: {\n        "src": _vm.itemThumb(_vm.getItemSrc(itemIndex), itemIndex),\n        "alt": ""\n      }\n    })]);\n  }), 0)]) : _vm._e(), _vm._v(" "), _c(\'div\', {\n    staticClass: "cool-lightbox__inner",\n    style: _vm.innerStyles,\n    on: {\n      "mousedown": _vm.startSwipe,\n      "mousemove": _vm.continueSwipe,\n      "mouseup": _vm.endSwipe,\n      "touchstart": _vm.startSwipe,\n      "touchmove": _vm.continueSwipe,\n      "touchend": _vm.endSwipe\n    }\n  }, [_c(\'div\', {\n    staticClass: "cool-lightbox__progressbar",\n    style: _vm.stylesInterval\n  }), _vm._v(" "), _c(\'div\', {\n    staticClass: "cool-lightbox__navigation"\n  }, [_c(\'button\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: (_vm.hasPreviousButton || _vm.loopData) && _vm.items.length > 1,\n      expression: "(hasPreviousButton || loopData) && items.length > 1"\n    }],\n    staticClass: "cool-lightbox-button cool-lightbox-button--prev",\n    class: _vm.buttonsClasses,\n    attrs: {\n      "type": "button",\n      "title": "Previous"\n    },\n    on: {\n      "click": _vm.onPrevClick\n    }\n  }, [_vm._t("icon-previous", [_c(\'div\', {\n    staticClass: "cool-lightbox-button__icon"\n  }, [_c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg",\n      "viewBox": "0 0 24 24"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"\n    }\n  })])])])], 2), _vm._v(" "), _c(\'button\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: (_vm.hasNextButton || _vm.loopData) && _vm.items.length > 1,\n      expression: "(hasNextButton || loopData) && items.length > 1"\n    }],\n    staticClass: "cool-lightbox-button cool-lightbox-button--next",\n    class: _vm.buttonsClasses,\n    attrs: {\n      "type": "button",\n      "title": "Next"\n    },\n    on: {\n      "click": function ($event) {\n        return _vm.onNextClick(false);\n      }\n    }\n  }, [_vm._t("icon-next", [_c(\'div\', {\n    staticClass: "cool-lightbox-button__icon"\n  }, [_c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg",\n      "viewBox": "0 0 24 24"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"\n    }\n  })])])])], 2)]), _vm._v(" "), _vm.effect === \'swipe\' ? _c(\'div\', {\n    staticClass: "cool-lightbox__wrapper cool-lightbox__wrapper--swipe",\n    style: {\n      transform: \'translate3d(\' + _vm.xSwipeWrapper + \'px, \' + _vm.ySwipeWrapper + \'px, 0)\',\n      transition: _vm.swipeAnimation\n    }\n  }, _vm._l(_vm.items, function (item, itemIndex) {\n    return _c(\'div\', {\n      key: itemIndex,\n      ref: "items",\n      refInFor: true,\n      staticClass: "cool-lightbox__slide",\n      class: {\n        \'cool-lightbox__slide--current\': itemIndex === _vm.imgIndex\n      }\n    }, [_vm.getMediaType(itemIndex) === \'image\' ? _c(\'div\', {\n      directives: [{\n        name: "lazyload",\n        rawName: "v-lazyload"\n      }],\n      key: "image",\n      staticClass: "cool-lightbox__slide__img",\n      style: _vm.imgWrapperStyle\n    }, [!_vm.isItemPicture(itemIndex) ? _c(\'img\', {\n      key: itemIndex,\n      attrs: {\n        "data-src": _vm.getItemSrc(itemIndex),\n        "data-srcset": _vm.getItemSrcSet(itemIndex),\n        "data-sizes": _vm.getItemSizes(itemIndex),\n        "draggable": "false",\n        "alt": _vm.getItemAlt(itemIndex)\n      },\n      on: {\n        "load": _vm.imageLoaded,\n        "click": function ($event) {\n          return _vm.zoomImage(itemIndex);\n        },\n        "mousedown": function ($event) {\n          return _vm.handleMouseDown($event);\n        },\n        "mouseup": function ($event) {\n          return _vm.handleMouseUp($event);\n        },\n        "mousemove": function ($event) {\n          return _vm.handleMouseMove($event);\n        },\n        "touchstart": function ($event) {\n          return _vm.handleMouseDown($event);\n        },\n        "touchmove": function ($event) {\n          return _vm.handleMouseMove($event);\n        },\n        "touchend": function ($event) {\n          return _vm.handleMouseUp($event);\n        }\n      }\n    }) : _c(\'picture\', {\n      key: itemIndex\n    }, [_vm._l(_vm.getPictureSources(itemIndex), function (source, sourceIndex) {\n      return _c(\'source\', {\n        key: "source-" + _vm.imgIndex + "-" + sourceIndex,\n        attrs: {\n          "data-srcset": source.srcset,\n          "data-media": source.media,\n          "type": source.type,\n          "data-sizes": source.sizes || _vm.getItemSizes(_vm.imgIndex)\n        }\n      });\n    }), _vm._v(" "), _c(\'img\', {\n      attrs: {\n        "data-src": _vm.getItemSrc(itemIndex),\n        "data-srcset": _vm.getItemSrcSet(itemIndex),\n        "data-sizes": _vm.getItemSizes(itemIndex),\n        "draggable": "false",\n        "alt": _vm.getItemAlt(itemIndex)\n      },\n      on: {\n        "load": _vm.imageLoaded,\n        "click": function ($event) {\n          return _vm.zoomImage(itemIndex);\n        },\n        "mousedown": function ($event) {\n          return _vm.handleMouseDown($event);\n        },\n        "mouseup": function ($event) {\n          return _vm.handleMouseUp($event);\n        },\n        "mousemove": function ($event) {\n          return _vm.handleMouseMove($event);\n        },\n        "touchstart": function ($event) {\n          return _vm.handleMouseDown($event);\n        },\n        "touchmove": function ($event) {\n          return _vm.handleMouseMove($event);\n        },\n        "touchend": function ($event) {\n          return _vm.handleMouseUp($event);\n        }\n      }\n    })], 2), _vm._v(" "), _c(\'div\', {\n      directives: [{\n        name: "show",\n        rawName: "v-show",\n        value: _vm.imageLoading,\n        expression: "imageLoading"\n      }],\n      staticClass: "cool-lightbox-loading-wrapper"\n    }, [_vm._t("loading", [_c(\'div\', {\n      staticClass: "cool-lightbox-loading"\n    })])], 2)]) : _c(\'div\', {\n      key: "video",\n      staticClass: "cool-lightbox__iframe"\n    }, [!_vm.checkIsMp4(_vm.getItemSrc(itemIndex)) && _vm.getMediaType(itemIndex) === \'video\' ? _c(\'iframe\', {\n      directives: [{\n        name: "autoplayObserver",\n        rawName: "v-autoplayObserver"\n      }],\n      key: itemIndex,\n      staticClass: "cool-lightbox-video",\n      style: _vm.aspectRatioVideo,\n      attrs: {\n        "data-autoplay": _vm.setAutoplay(itemIndex),\n        "src": _vm.getVideoUrl(_vm.getItemSrc(itemIndex)),\n        "frameborder": "0",\n        "allow": "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",\n        "allowfullscreen": ""\n      }\n    }) : _vm._e(), _vm._v(" "), _vm.getMediaType(itemIndex) === \'iframe\' || _vm.getPDFurl(_vm.getItemSrc(itemIndex)) ? _c(\'iframe\', {\n      key: itemIndex,\n      staticClass: "cool-lightbox-pdf",\n      attrs: {\n        "src": _vm.getItemSrc(itemIndex),\n        "frameborder": "0",\n        "allowfullscreen": ""\n      }\n    }) : _vm._e(), _vm._v(" "), _vm.checkIsMp4(_vm.getItemSrc(itemIndex)) || _vm.getMediaType(itemIndex) === \'webVideo\' ? _c(\'video\', {\n      directives: [{\n        name: "autoplayObserver",\n        rawName: "v-autoplayObserver"\n      }],\n      key: _vm.checkIsMp4(_vm.getItemSrc(itemIndex)),\n      staticClass: "cool-lightbox-video",\n      style: _vm.aspectRatioVideo,\n      attrs: {\n        "data-autoplay": _vm.setAutoplay(itemIndex),\n        "controls": "",\n        "controlslist": "nodownload",\n        "l": "",\n        "poster": ""\n      }\n    }, [_c(\'source\', {\n      attrs: {\n        "src": _vm.checkIsMp4(_vm.getItemSrc(itemIndex)),\n        "type": \'video/\' + (_vm.getVideoExt(_vm.getItemSrc(itemIndex)) ? _vm.getVideoExt(_vm.getItemSrc(itemIndex)) : _vm.getExtFromItem(itemIndex))\n      }\n    }), _vm._v("\\n              Sorry, your browser doesn\'t support embedded videos\\n            ")]) : _vm._e()])]);\n  }), 0) : _vm._e(), _vm._v(" "), _vm.effect === \'fade\' ? _c(\'div\', {\n    staticClass: "cool-lightbox__wrapper"\n  }, [_c(\'div\', {\n    ref: "items",\n    staticClass: "cool-lightbox__slide cool-lightbox__slide--current"\n  }, [_c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [_vm.getMediaType(_vm.imgIndex) === \'image\' ? _c(\'div\', {\n    key: "image",\n    staticClass: "cool-lightbox__slide__img",\n    style: _vm.imgWrapperStyle\n  }, [!_vm.isItemPicture(_vm.imgIndex) ? _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [_c(\'img\', {\n    key: _vm.imgIndex,\n    attrs: {\n      "src": _vm.getItemSrc(_vm.imgIndex),\n      "srcset": _vm.getItemSrcSet(_vm.imgIndex),\n      "sizes": _vm.getItemSizes(_vm.imgIndex),\n      "draggable": "false",\n      "alt": _vm.getItemAlt(_vm.imgIndex)\n    },\n    on: {\n      "load": _vm.imageLoaded,\n      "click": _vm.zoomImage,\n      "mousedown": function ($event) {\n        return _vm.handleMouseDown($event);\n      },\n      "mouseup": function ($event) {\n        return _vm.handleMouseUp($event);\n      },\n      "mousemove": function ($event) {\n        return _vm.handleMouseMove($event);\n      }\n    }\n  })]) : _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [_c(\'picture\', {\n    key: _vm.imgIndex\n  }, [_vm._l(_vm.getPictureSources(_vm.imgIndex), function (source, sourceIndex) {\n    return _c(\'source\', {\n      key: "source-" + _vm.imgIndex + "-" + sourceIndex,\n      attrs: {\n        "srcset": source.srcset,\n        "type": source.type,\n        "media": source.media,\n        "sizes": source.sizes || _vm.getItemSizes(_vm.imgIndex)\n      }\n    });\n  }), _vm._v(" "), _c(\'img\', {\n    attrs: {\n      "src": _vm.getItemSrc(_vm.imgIndex),\n      "srcset": _vm.getItemSrcSet(_vm.imgIndex),\n      "sizes": _vm.getItemSizes(_vm.imgIndex),\n      "draggable": "false",\n      "alt": _vm.getItemAlt(_vm.imgIndex)\n    },\n    on: {\n      "load": _vm.imageLoaded,\n      "click": function ($event) {\n        return _vm.zoomImage(_vm.imgIndex);\n      },\n      "mousedown": function ($event) {\n        return _vm.handleMouseDown($event);\n      },\n      "mouseup": function ($event) {\n        return _vm.handleMouseUp($event);\n      },\n      "mousemove": function ($event) {\n        return _vm.handleMouseMove($event);\n      }\n    }\n  })], 2)]), _vm._v(" "), _c(\'div\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: _vm.imageLoading,\n      expression: "imageLoading"\n    }],\n    staticClass: "cool-lightbox-loading-wrapper"\n  }, [_vm._t("loading", [_c(\'div\', {\n    staticClass: "cool-lightbox-loading"\n  })])], 2)], 1) : _c(\'div\', {\n    key: "video",\n    staticClass: "cool-lightbox__iframe"\n  }, [_c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [!_vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)) && _vm.getMediaType(_vm.imgIndex) === \'video\' ? _c(\'iframe\', {\n    directives: [{\n      name: "autoplayObserver",\n      rawName: "v-autoplayObserver"\n    }],\n    key: _vm.getVideoUrl(_vm.getItemSrc(_vm.imgIndex)),\n    staticClass: "cool-lightbox-video",\n    style: _vm.aspectRatioVideo,\n    attrs: {\n      "data-autoplay": _vm.setAutoplay(_vm.imgIndex),\n      "src": _vm.getVideoUrl(_vm.getItemSrc(_vm.imgIndex)),\n      "frameborder": "0",\n      "allow": "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",\n      "allowfullscreen": ""\n    }\n  }) : _vm._e(), _vm._v(" "), _vm.getMediaType(_vm.imgIndex) === \'iframe\' || _vm.getPDFurl(_vm.getItemSrc(_vm.imgIndex)) ? _c(\'iframe\', {\n    key: _vm.imgIndex,\n    staticClass: "cool-lightbox-pdf",\n    attrs: {\n      "src": _vm.getItemSrc(_vm.imgIndex),\n      "frameborder": "0",\n      "allowfullscreen": ""\n    }\n  }) : _vm._e(), _vm._v(" "), _vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)) || _vm.getMediaType(_vm.imgIndex) === \'webVideo\' ? _c(\'video\', {\n    directives: [{\n      name: "autoplayObserver",\n      rawName: "v-autoplayObserver"\n    }],\n    key: _vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)),\n    staticClass: "cool-lightbox-video",\n    style: _vm.aspectRatioVideo,\n    attrs: {\n      "data-autoplay": _vm.setAutoplay(_vm.imgIndex),\n      "controls": "",\n      "controlslist": "nodownload",\n      "poster": ""\n    }\n  }, [_c(\'source\', {\n    attrs: {\n      "src": _vm.checkIsMp4(_vm.getItemSrc(_vm.imgIndex)),\n      "type": \'video/\' + (_vm.getVideoExt(_vm.getItemSrc(_vm.imgIndex)) ? _vm.getVideoExt(_vm.getItemSrc(_vm.imgIndex)) : _vm.getExtFromItem(_vm.imgIndex))\n    }\n  }), _vm._v("\\n                  Sorry, your browser doesn\'t support embedded videos\\n                ")]) : _vm._e()])], 1)])], 1)]) : _vm._e(), _vm._v(" "), _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-modal"\n    }\n  }, [_c(\'div\', {\n    directives: [{\n      name: "show",\n      rawName: "v-show",\n      value: _vm.checkIfIsObject(_vm.imgIndex) && (_vm.items[_vm.imgIndex].title || _vm.items[_vm.imgIndex].description),\n      expression: "checkIfIsObject(imgIndex) && (items[imgIndex].title || items[imgIndex].description)"\n    }],\n    key: "caption-block",\n    staticClass: "cool-lightbox-caption"\n  }, [_c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [_vm.checkIfIsObject(_vm.imgIndex) && _vm.items[_vm.imgIndex].title ? _c(\'h6\', {\n    key: "title",\n    domProps: {\n      "innerHTML": _vm._s(_vm.items[_vm.imgIndex].title)\n    }\n  }) : _vm._e()]), _vm._v(" "), _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-slide-change",\n      "mode": "out-in"\n    }\n  }, [_vm.checkIfIsObject(_vm.imgIndex) && _vm.items[_vm.imgIndex].description ? _c(\'p\', {\n    key: "description",\n    domProps: {\n      "innerHTML": _vm._s(_vm.items[_vm.imgIndex].description)\n    }\n  }) : _vm._e()])], 1)]), _vm._v(" "), _c(\'div\', {\n    staticClass: "cool-lightbox-toolbar",\n    class: _vm.buttonsClasses\n  }, [this.slideshow && _vm.items.length > 1 ? _c(\'button\', {\n    staticClass: "cool-lightbox-toolbar__btn",\n    attrs: {\n      "type": "button",\n      "title": "Play slideshow"\n    },\n    on: {\n      "click": _vm.togglePlaySlideshow\n    }\n  }, [!_vm.isPlayingSlideShow ? _c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg",\n      "viewBox": "0 0 24 24"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M6.5 5.4v13.2l11-6.6z"\n    }\n  })]) : _c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg"\n    }\n  }, [_c(\'g\', [_c(\'rect\', {\n    attrs: {\n      "id": "svg_4",\n      "height": "11.97529",\n      "width": "11.728392",\n      "y": "6.030873",\n      "x": "6.259265",\n      "stroke-width": "1.5",\n      "stroke": "#000",\n      "fill": "#000000"\n    }\n  })])])]) : _vm._e(), _vm._v(" "), _vm.items.length > 1 && _vm.gallery ? _c(\'button\', {\n    staticClass: "cool-lightbox-toolbar__btn",\n    attrs: {\n      "type": "button",\n      "title": "Show thumbnails"\n    },\n    on: {\n      "click": function ($event) {\n        _vm.showThumbs = !_vm.showThumbs;\n      }\n    }\n  }, [_c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg",\n      "viewBox": "0 0 24 24"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 \\n            0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 \\n            0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 \\n            0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"\n    }\n  })])]) : _vm._e(), _vm._v(" "), _vm.fullScreen ? _c(\'button\', {\n    staticClass: "cool-lightbox-toolbar__btn",\n    attrs: {\n      "type": "button",\n      "title": "Fullscreen"\n    },\n    on: {\n      "click": _vm.toggleFullScreenMode\n    }\n  }, [_c(\'svg\', {\n    attrs: {\n      "width": "20px",\n      "height": "20px",\n      "viewBox": "0 0 18 18",\n      "xmlns": "http://www.w3.org/2000/svg"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M4.5 11H3v4h4v-1.5H4.5V11zM3 7h1.5V4.5H7V3H3v4zm10.5 6.5H11V15h4v-4h-1.5v2.5zM11 3v1.5h2.5V7H15V3h-4z"\n    }\n  })])]) : _vm._e(), _vm._v(" "), _vm.showCloseButton ? _c(\'button\', {\n    staticClass: "cool-lightbox-toolbar__btn",\n    attrs: {\n      "type": "button",\n      "title": "Close"\n    },\n    on: {\n      "click": _vm.close\n    }\n  }, [_vm._t("close", [_c(\'svg\', {\n    attrs: {\n      "xmlns": "http://www.w3.org/2000/svg",\n      "viewBox": "0 0 24 24"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"\n    }\n  })])])], 2) : _vm._e()])], 1), _vm._v(" "), _c(\'transition\', {\n    attrs: {\n      "name": "cool-lightbox-modal"\n    }\n  }, [_vm.isZooming && _vm.useZoomBar ? _c(\'div\', {\n    staticClass: "cool-lightbox-zoom"\n  }, [_c(\'svg\', {\n    staticClass: "cool-lightbox-zoom__icon",\n    attrs: {\n      "height": "469pt",\n      "viewBox": "0 -192 469.33333 469",\n      "width": "469pt",\n      "xmlns": "http://www.w3.org/2000/svg"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "m437.332031.167969h-405.332031c-17.664062 \\n          0-32 14.335937-32 32v21.332031c0 17.664062 14.335938 32 32 32h405.332031c17.664063 0 32-14.335938 \\n          32-32v-21.332031c0-17.664063-14.335937-32-32-32zm0 0"\n    }\n  })]), _vm._v(" "), _c(\'input\', {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.zoomBar,\n      expression: "zoomBar"\n    }],\n    attrs: {\n      "type": "range",\n      "name": "points",\n      "min": "0",\n      "max": "50"\n    },\n    domProps: {\n      "value": _vm.zoomBar\n    },\n    on: {\n      "__r": function ($event) {\n        _vm.zoomBar = $event.target.value;\n      }\n    }\n  }), _vm._v(" "), _c(\'svg\', {\n    staticClass: "cool-lightbox-zoom__icon",\n    attrs: {\n      "height": "426.66667pt",\n      "viewBox": "0 0 426.66667 426.66667",\n      "width": "426.66667pt",\n      "xmlns": "http://www.w3.org/2000/svg"\n    }\n  }, [_c(\'path\', {\n    attrs: {\n      "d": "m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 \\n          9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 \\n          11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 \\n          21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 \\n          21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0"\n    }\n  })])]) : _vm._e()])], 1) : _vm._e()]);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\nvar CoolLightBox = normalizeComponent_1({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\nfunction install(Vue) {\n  if (install.installed) {\n    return;\n  }\n\n  install.installed = true;\n  Vue.component("CoolLightBox", CoolLightBox);\n}\n\nvar plugin = {\n  install: install\n};\nvar GlobalVue = null;\n\nif (typeof window !== "undefined") {\n  GlobalVue = window.Vue;\n} else if (typeof global !== "undefined") {\n  GlobalVue = global.vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nCoolLightBox.install = install;\n/* harmony default export */ __webpack_exports__["default"] = (CoolLightBox);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.esm.js?')},"./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css":
/*!***********************************************************************!*\
  !*** ./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css ***!
  \***********************************************************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./node_modules/vue-cool-lightbox/dist/vue-cool-lightbox.min.css?")}}]);